{
    "PolicyVersion": {
        "CreateDate": "2025-05-21T18:22:07Z", 
        "VersionId": "v32", 
        "Document": {
            "Version": "2012-10-17", 
            "Statement": [
                {
                    "Action": [
                        "waf:UpdateWebACL", 
                        "waf:DeleteWebACL", 
                        "waf:GetWebACL", 
                        "waf:GetRuleGroup", 
                        "waf:ListSubscribedRuleGroups", 
                        "waf-regional:UpdateWebACL", 
                        "waf-regional:DeleteWebACL", 
                        "waf-regional:GetWebACL", 
                        "waf-regional:GetRuleGroup", 
                        "waf-regional:ListSubscribedRuleGroups", 
                        "waf-regional:ListResourcesForWebACL", 
                        "waf-regional:AssociateWebACL", 
                        "waf-regional:DisassociateWebACL", 
                        "elasticloadbalancing:SetWebACL", 
                        "apigateway:SetWebACL", 
                        "elasticloadbalancing:SetSecurityGroups", 
                        "waf:ListTagsForResource", 
                        "waf-regional:ListTagsForResource"
                    ], 
                    "Resource": [
                        "arn:aws:waf:*:*:webacl/*", 
                        "arn:aws:waf-regional:*:*:webacl/*", 
                        "arn:aws:waf:*:*:rulegroup/*", 
                        "arn:aws:waf-regional:*:*:rulegroup/*", 
                        "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*", 
                        "arn:aws:apigateway:*::/restapis/*/stages/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "WafGeneral"
                }, 
                {
                    "Action": [
                        "wafv2:PutLoggingConfiguration", 
                        "wafv2:GetLoggingConfiguration", 
                        "wafv2:ListLoggingConfigurations", 
                        "wafv2:DeleteLoggingConfiguration"
                    ], 
                    "Resource": [
                        "arn:aws:wafv2:*:*:regional/webacl/*", 
                        "arn:aws:wafv2:*:*:global/webacl/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "Wafv2Logging"
                }, 
                {
                    "Action": [
                        "waf:CreateWebACL", 
                        "waf-regional:CreateWebACL", 
                        "waf:GetChangeToken", 
                        "waf-regional:GetChangeToken", 
                        "waf-regional:GetWebACLForResource"
                    ], 
                    "Resource": [
                        "arn:aws:waf:*:*:*", 
                        "arn:aws:waf-regional:*:*:*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "WafWebaclCreation"
                }, 
                {
                    "Action": [
                        "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer", 
                        "elasticloadbalancing:DescribeTags"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "ElbGeneral"
                }, 
                {
                    "Action": [
                        "waf:PutPermissionPolicy", 
                        "waf:GetPermissionPolicy", 
                        "waf:DeletePermissionPolicy", 
                        "waf-regional:PutPermissionPolicy", 
                        "waf-regional:GetPermissionPolicy", 
                        "waf-regional:DeletePermissionPolicy"
                    ], 
                    "Resource": [
                        "arn:aws:waf:*:*:webacl/*", 
                        "arn:aws:waf:*:*:rulegroup/*", 
                        "arn:aws:waf-regional:*:*:webacl/*", 
                        "arn:aws:waf-regional:*:*:rulegroup/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "WafPermissionPolicy"
                }, 
                {
                    "Action": [
                        "cloudfront:GetDistribution", 
                        "cloudfront:UpdateDistribution", 
                        "cloudfront:ListDistributionsByWebACLId", 
                        "cloudfront:ListDistributions", 
                        "cloudfront:ListTagsForResource", 
                        "cloudfront:AssociateDistributionWebACL", 
                        "cloudfront:DisassociateDistributionWebACL"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "CloudfrontGeneral"
                }, 
                {
                    "Action": [
                        "config:DeleteConfigRule", 
                        "config:GetComplianceDetailsByConfigRule", 
                        "config:PutConfigRule", 
                        "config:StartConfigRulesEvaluation", 
                        "config:DeleteEvaluationResults"
                    ], 
                    "Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/fms.amazonaws.com/*", 
                    "Effect": "Allow", 
                    "Sid": "ConfigScoped"
                }, 
                {
                    "Action": [
                        "config:DescribeComplianceByConfigRule", 
                        "config:DescribeConfigurationRecorders", 
                        "config:DescribeConfigurationRecorderStatus", 
                        "config:DescribeConfigRules", 
                        "config:DescribeConfigRuleEvaluationStatus", 
                        "config:PutConfigurationRecorder", 
                        "config:StartConfigurationRecorder", 
                        "config:PutDeliveryChannel", 
                        "config:DescribeDeliveryChannels", 
                        "config:DescribeDeliveryChannelStatus", 
                        "config:GetComplianceSummaryByConfigRule", 
                        "config:GetDiscoveredResourceCounts", 
                        "config:PutEvaluations", 
                        "config:SelectResourceConfig", 
                        "config:BatchGetResourceConfig"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "ConfigUnscoped"
                }, 
                {
                    "Action": [
                        "iam:DeleteServiceLinkedRole", 
                        "iam:GetServiceLinkedRoleDeletionStatus"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/aws-service-role/fms.amazonaws.com/AWSServiceRoleForFMS"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "SlrDeletion"
                }, 
                {
                    "Action": [
                        "organizations:DescribeAccount", 
                        "organizations:DescribeOrganization", 
                        "organizations:ListAccounts", 
                        "organizations:DescribeOrganizationalUnit", 
                        "organizations:ListChildren", 
                        "organizations:ListRoots", 
                        "organizations:ListParents", 
                        "organizations:ListOrganizationalUnitsForParent", 
                        "organizations:ListAWSServiceAccessForOrganization"
                    ], 
                    "Resource": [
                        "*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "OrganizationsGeneral"
                }, 
                {
                    "Action": [
                        "shield:CreateProtection", 
                        "shield:DeleteProtection", 
                        "shield:DescribeProtection", 
                        "shield:ListProtections", 
                        "shield:ListAttacks", 
                        "shield:CreateSubscription", 
                        "shield:DescribeSubscription", 
                        "shield:GetSubscriptionState", 
                        "shield:DescribeDRTAccess", 
                        "shield:DescribeEmergencyContactSettings", 
                        "shield:UpdateEmergencyContactSettings", 
                        "elasticloadbalancing:DescribeLoadBalancers", 
                        "ec2:DescribeAddresses", 
                        "shield:EnableApplicationLayerAutomaticResponse", 
                        "shield:DisableApplicationLayerAutomaticResponse", 
                        "shield:UpdateApplicationLayerAutomaticResponse"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "ShieldGeneral"
                }, 
                {
                    "Action": [
                        "ec2:AuthorizeSecurityGroupEgress", 
                        "ec2:AuthorizeSecurityGroupIngress", 
                        "ec2:DeleteSecurityGroup", 
                        "ec2:RevokeSecurityGroupEgress", 
                        "ec2:RevokeSecurityGroupIngress", 
                        "ec2:UpdateSecurityGroupRuleDescriptionsEgress", 
                        "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:network-interface/*", 
                        "arn:aws:ec2:*:*:security-group/*", 
                        "arn:aws:ec2:*:*:instance/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "EC2SecurityGroupScoped"
                }, 
                {
                    "Action": [
                        "ec2:CreateTags"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:security-group/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "ec2:CreateAction": "CreateSecurityGroup"
                        }
                    }, 
                    "Sid": "SecurityGroupTagCreation"
                }, 
                {
                    "Action": [
                        "ec2:DeleteTags", 
                        "ec2:CreateTags"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:security-group/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "aws:ResourceTag/FMManaged": "*"
                        }
                    }, 
                    "Sid": "SecurityGroupTagManagement"
                }, 
                {
                    "Action": [
                        "ec2:CreateSecurityGroup", 
                        "ec2:DescribeSecurityGroupReferences", 
                        "ec2:DescribeSecurityGroups", 
                        "ec2:DescribeStaleSecurityGroups", 
                        "ec2:DescribeNetworkInterfaces", 
                        "ec2:ModifyNetworkInterfaceAttribute", 
                        "ec2:DescribeVpcs", 
                        "ec2:DescribeVpcPeeringConnections", 
                        "ec2:DescribeNetworkInterfaceAttribute", 
                        "ec2:DescribeInstances", 
                        "ec2:AssociateRouteTable", 
                        "ec2:CreateSubnet", 
                        "ec2:CreateRouteTable", 
                        "ec2:DeleteSubnet", 
                        "ec2:DisassociateRouteTable", 
                        "ec2:ReplaceRouteTableAssociation"
                    ], 
                    "Resource": [
                        "*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "Ec2Unscoped"
                }, 
                {
                    "Action": [
                        "wafv2:TagResource", 
                        "wafv2:ListResourcesForWebACL", 
                        "wafv2:AssociateWebACL", 
                        "wafv2:ListTagsForResource", 
                        "wafv2:UntagResource", 
                        "wafv2:GetWebACL", 
                        "wafv2:DisassociateFirewallManager", 
                        "wafv2:DeleteWebACL", 
                        "wafv2:DisassociateWebACL"
                    ], 
                    "Resource": [
                        "arn:aws:wafv2:*:*:global/webacl/*", 
                        "arn:aws:wafv2:*:*:regional/webacl/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "Wafv2General"
                }, 
                {
                    "Action": [
                        "wafv2:UpdateWebACL", 
                        "wafv2:CreateWebACL", 
                        "wafv2:DeleteFirewallManagerRuleGroups", 
                        "wafv2:PutFirewallManagerRuleGroups"
                    ], 
                    "Resource": [
                        "arn:aws:wafv2:*:*:global/webacl/*", 
                        "arn:aws:wafv2:*:*:regional/webacl/*", 
                        "arn:aws:wafv2:*:*:global/rulegroup/*", 
                        "arn:aws:wafv2:*:*:regional/rulegroup/*", 
                        "arn:aws:wafv2:*:*:global/managedruleset/*", 
                        "arn:aws:wafv2:*:*:regional/managedruleset/*", 
                        "arn:aws:wafv2:*:*:global/ipset/*", 
                        "arn:aws:wafv2:*:*:regional/ipset/*", 
                        "arn:aws:wafv2:*:*:global/regexpatternset/*", 
                        "arn:aws:wafv2:*:*:regional/regexpatternset/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "Wafv2WebAclAndRuleGroupMutation"
                }, 
                {
                    "Action": [
                        "wafv2:PutPermissionPolicy", 
                        "wafv2:GetPermissionPolicy", 
                        "wafv2:DeletePermissionPolicy"
                    ], 
                    "Resource": [
                        "arn:aws:wafv2:*:*:global/rulegroup/*", 
                        "arn:aws:wafv2:*:*:regional/rulegroup/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "Wafv2PermissionPolicy"
                }, 
                {
                    "Action": [
                        "wafv2:GetWebACLForResource"
                    ], 
                    "Resource": [
                        "arn:aws:wafv2:*:*:regional/webacl/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "Wafv2WebaclDescribe"
                }, 
                {
                    "Action": "ec2:CreateTags", 
                    "Resource": "arn:aws:ec2:*:*:route-table/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "ec2:CreateAction": "CreateRouteTable"
                        }, 
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "Name", 
                                "FMManaged"
                            ]
                        }
                    }, 
                    "Sid": "RouteTableTagManagement"
                }, 
                {
                    "Action": "ec2:CreateTags", 
                    "Resource": [
                        "arn:aws:ec2:*:*:subnet/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "Name", 
                                "FMManaged"
                            ]
                        }
                    }, 
                    "Sid": "SubnetTagManagement"
                }, 
                {
                    "Action": "ec2:CreateTags", 
                    "Resource": [
                        "arn:aws:ec2:*:*:vpc-endpoint/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "ec2:CreateAction": "CreateVpcEndpoint"
                        }, 
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "Name", 
                                "FMManaged"
                            ]
                        }
                    }, 
                    "Sid": "VPCEndpointTagManagement"
                }, 
                {
                    "Action": "ec2:DeleteRouteTable", 
                    "Resource": "arn:aws:ec2:*:*:route-table/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "ec2:ResourceTag/FMManaged": "true"
                        }
                    }, 
                    "Sid": "RouteTableCleanup"
                }, 
                {
                    "Action": [
                        "ec2:DescribeInternetGateways", 
                        "ec2:DescribeRouteTables", 
                        "ec2:DescribeSubnets", 
                        "ec2:DescribeTags", 
                        "ec2:DescribeVpcEndpoints", 
                        "ec2:DescribeAvailabilityZones"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "Ec2DescribeUnscoped"
                }, 
                {
                    "Action": "ec2:CreateVpcEndpoint", 
                    "Resource": [
                        "arn:aws:ec2:*:*:vpc-endpoint/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:RequestTag/FMManaged": [
                                "true"
                            ]
                        }
                    }, 
                    "Sid": "CreateVpcEndpointScoped"
                }, 
                {
                    "Action": "ec2:CreateVpcEndpoint", 
                    "Resource": [
                        "arn:aws:ec2:*:*:subnet/*", 
                        "arn:aws:ec2:*:*:vpc/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "CreateVpcEndpointUnscoped"
                }, 
                {
                    "Action": [
                        "ec2:DeleteVpcEndpoints"
                    ], 
                    "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "ec2:ResourceTag/FMManaged": "true"
                        }
                    }, 
                    "Sid": "VpcEndpointsDeletion"
                }, 
                {
                    "Action": [
                        "ram:TagResource"
                    ], 
                    "Resource": [
                        "arn:aws:ram:*:*:resource-share/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "Name", 
                                "FMManaged"
                            ]
                        }
                    }, 
                    "Sid": "RamTagManagement"
                }, 
                {
                    "Action": [
                        "ram:AssociateResourceShare", 
                        "ram:UpdateResourceShare", 
                        "ram:DeleteResourceShare"
                    ], 
                    "Resource": "arn:aws:ram:*:*:resource-share/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/FMManaged": "true"
                        }
                    }, 
                    "Sid": "RamMutation"
                }, 
                {
                    "Action": "ram:CreateResourceShare", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:RequestTag/FMManaged": [
                                "true"
                            ]
                        }, 
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "Name", 
                                "FMManaged"
                            ]
                        }
                    }, 
                    "Sid": "RamCreation"
                }, 
                {
                    "Action": [
                        "ram:GetResourceShareAssociations", 
                        "ram:GetResourceShares"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "RamDescribe"
                }, 
                {
                    "Action": "iam:CreateServiceLinkedRole", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:AWSServiceName": [
                                "network-firewall.amazonaws.com", 
                                "shield.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "SlrCreation"
                }, 
                {
                    "Action": "iam:GetRole", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "IamDescribe"
                }, 
                {
                    "Action": [
                        "network-firewall:TagResource"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "Name", 
                                "FMManaged"
                            ]
                        }
                    }, 
                    "Sid": "NetworkFirewallTagManagement"
                }, 
                {
                    "Action": [
                        "network-firewall:AssociateSubnets", 
                        "network-firewall:CreateFirewall", 
                        "network-firewall:CreateFirewallPolicy", 
                        "network-firewall:DisassociateSubnets", 
                        "network-firewall:UpdateFirewallDeleteProtection", 
                        "network-firewall:UpdateFirewallPolicy", 
                        "network-firewall:UpdateFirewallPolicyChangeProtection", 
                        "network-firewall:UpdateSubnetChangeProtection", 
                        "network-firewall:AssociateFirewallPolicy", 
                        "network-firewall:DescribeFirewall", 
                        "network-firewall:DescribeFirewallPolicy", 
                        "network-firewall:DescribeRuleGroup", 
                        "network-firewall:ListFirewallPolicies", 
                        "network-firewall:ListFirewalls", 
                        "network-firewall:ListRuleGroups", 
                        "network-firewall:DescribeResourcePolicy", 
                        "network-firewall:DeleteResourcePolicy", 
                        "network-firewall:DescribeLoggingConfiguration", 
                        "network-firewall:UpdateLoggingConfiguration", 
                        "network-firewall:DescribeTLSInspectionConfiguration", 
                        "network-firewall:ListTLSInspectionConfigurations"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "NetworkFirewallGeneral"
                }, 
                {
                    "Action": [
                        "network-firewall:PutResourcePolicy"
                    ], 
                    "Resource": [
                        "arn:aws:network-firewall:*:*:firewall-policy/*", 
                        "arn:aws:network-firewall:*:*:stateful-rulegroup/*", 
                        "arn:aws:network-firewall:*:*:stateless-rulegroup/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "NetworkFirewallResourcePolicy"
                }, 
                {
                    "Action": [
                        "network-firewall:DeleteFirewallPolicy", 
                        "network-firewall:DeleteFirewall"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/FMManaged": "true"
                        }
                    }, 
                    "Sid": "NetworkFirewallCleanup"
                }, 
                {
                    "Action": [
                        "logs:ListLogDeliveries", 
                        "logs:CreateLogDelivery", 
                        "logs:GetLogDelivery", 
                        "logs:UpdateLogDelivery", 
                        "logs:DeleteLogDelivery"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "LogsGeneral"
                }, 
                {
                    "Action": [
                        "route53resolver:ListFirewallRuleGroupAssociations", 
                        "route53resolver:ListTagsForResource", 
                        "route53resolver:ListFirewallRuleGroups", 
                        "route53resolver:GetFirewallRuleGroupAssociation", 
                        "route53resolver:GetFirewallRuleGroup", 
                        "route53resolver:GetFirewallRuleGroupPolicy", 
                        "route53resolver:PutFirewallRuleGroupPolicy"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "Route53ResolverRuleGroupUnscoped"
                }, 
                {
                    "Action": [
                        "route53resolver:UpdateFirewallRuleGroupAssociation", 
                        "route53resolver:DisassociateFirewallRuleGroup"
                    ], 
                    "Resource": "arn:aws:route53resolver:*:*:firewall-rule-group-association/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/FMManaged": "true"
                        }
                    }, 
                    "Sid": "Route53ResolverRuleGroupCleanup"
                }, 
                {
                    "Action": [
                        "route53resolver:AssociateFirewallRuleGroup", 
                        "route53resolver:TagResource"
                    ], 
                    "Resource": "arn:aws:route53resolver:*:*:firewall-rule-group-association/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:RequestTag/FMManaged": "true"
                        }
                    }, 
                    "Sid": "Route53ResolverRuleGroupScoped"
                }, 
                {
                    "Action": [
                        "ec2:CreateTags"
                    ], 
                    "Resource": "arn:aws:ec2:*:*:network-acl/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "ec2:CreateAction": "CreateNetworkAcl"
                        }, 
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "Name", 
                                "FMManaged", 
                                "FMPolicies"
                            ]
                        }
                    }, 
                    "Sid": "NaclTagCreation"
                }, 
                {
                    "Action": [
                        "ec2:CreateTags", 
                        "ec2:DeleteTags"
                    ], 
                    "Resource": "arn:aws:ec2:*:*:network-acl/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/FMManaged": "true"
                        }, 
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "Name", 
                                "FMManaged", 
                                "FMPolicies"
                            ]
                        }
                    }, 
                    "Sid": "NaclTagManagement"
                }, 
                {
                    "Action": [
                        "ec2:DeleteNetworkAclEntry", 
                        "ec2:CreateNetworkAclEntry", 
                        "ec2:ReplaceNetworkAclEntry", 
                        "ec2:DeleteNetworkAcl"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/FMManaged": "true"
                        }
                    }, 
                    "Sid": "NaclScoped"
                }, 
                {
                    "Action": [
                        "ec2:ReplaceNetworkAclAssociation", 
                        "ec2:DescribeNetworkAcls", 
                        "ec2:CreateNetworkAcl"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "NaclUnscoped"
                }
            ]
        }, 
        "IsDefaultVersion": true
    }
}
