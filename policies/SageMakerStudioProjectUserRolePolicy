{
    "PolicyVersion": {
        "CreateDate": "2025-07-11T17:52:08Z", 
        "VersionId": "v15", 
        "Document": {
            "Version": "2012-10-17", 
            "Statement": [
                {
                    "Action": [
                        "codecommit:BatchGetCommits", 
                        "codecommit:BatchGetPullRequests", 
                        "codecommit:BatchGetRepositories", 
                        "codecommit:BatchDescribeMergeConflicts", 
                        "codecommit:CreateBranch", 
                        "codecommit:CreateCommit", 
                        "codecommit:CreatePullRequest", 
                        "codecommit:DeleteBranch", 
                        "codecommit:DeleteFile", 
                        "codecommit:DescribeMergeConflicts", 
                        "codecommit:DescribePullRequestEvents", 
                        "codecommit:GetBlob", 
                        "codecommit:GetBranch", 
                        "codecommit:GetComment", 
                        "codecommit:GetCommentReactions", 
                        "codecommit:GetCommentsForComparedCommit", 
                        "codecommit:GetCommentsForPullRequest", 
                        "codecommit:GetCommit", 
                        "codecommit:GetCommitHistory", 
                        "codecommit:GetCommitsFromMergeBase", 
                        "codecommit:GetDifferences", 
                        "codecommit:GetFile", 
                        "codecommit:GetFolder", 
                        "codecommit:GetMergeCommit", 
                        "codecommit:GetMergeConflicts", 
                        "codecommit:GetMergeOptions", 
                        "codecommit:GetObjectIdentifier", 
                        "codecommit:GetPullRequest", 
                        "codecommit:GetPullRequestApprovalStates", 
                        "codecommit:GetPullRequestOverrideState", 
                        "codecommit:GetReferences", 
                        "codecommit:GetRepository", 
                        "codecommit:GetRepositoryTriggers", 
                        "codecommit:GetTree", 
                        "codecommit:GetUploadArchiveStatus", 
                        "codecommit:GitPull", 
                        "codecommit:GitPush", 
                        "codecommit:ListAssociatedApprovalRuleTemplatesForRepository", 
                        "codecommit:ListBranches", 
                        "codecommit:ListFileCommitHistory", 
                        "codecommit:ListPullRequests", 
                        "codecommit:ListTagsForResource", 
                        "codecommit:MergeBranchesByFastForward", 
                        "codecommit:MergeBranchesBySquash", 
                        "codecommit:MergeBranchesByThreeWay", 
                        "codecommit:MergePullRequestByFastForward", 
                        "codecommit:MergePullRequestBySquash", 
                        "codecommit:MergePullRequestByThreeWay", 
                        "codecommit:UpdateComment", 
                        "codecommit:UpdateDefaultBranch", 
                        "codecommit:UpdatePullRequestApprovalRuleContent", 
                        "codecommit:UpdatePullRequestApprovalState", 
                        "codecommit:UpdatePullRequestDescription", 
                        "codecommit:UpdatePullRequestStatus", 
                        "codecommit:UpdatePullRequestTitle", 
                        "codecommit:UpdateRepositoryDescription", 
                        "codecommit:PostCommentForComparedCommit", 
                        "codecommit:PostCommentForPullRequest", 
                        "codecommit:PostCommentReply", 
                        "codecommit:PutCommentReaction", 
                        "codecommit:PutFile"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "CommonUserCodeCommitPermissions"
                }, 
                {
                    "Action": [
                        "kms:ReEncryptFrom", 
                        "kms:ReEncryptTo", 
                        "kms:Decrypt", 
                        "kms:Encrypt", 
                        "kms:GenerateDataKey", 
                        "kms:GenerateDataKeyWithoutPlaintext"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "Null": {
                            "kms:EncryptionContext:aws:codecommit:id": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": [
                                "codecommit.*.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "CodeCommitKmsPermissions"
                }, 
                {
                    "Action": [
                        "codewhisperer:GenerateRecommendations"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "AllowCodeWhispererGenerateRecommendations"
                }, 
                {
                    "Action": [
                        "ec2:CreateNetworkInterface"
                    ], 
                    "Resource": "arn:aws:ec2:*:*:network-interface/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:TagKeys": "true"
                        }, 
                        "StringEquals": {
                            "glue:RoleAssumedBy": "glue.amazonaws.com"
                        }
                    }, 
                    "Sid": "AllowGlueCreateEni"
                }, 
                {
                    "Action": [
                        "ec2:CreateNetworkInterface"
                    ], 
                    "Resource": "arn:aws:ec2:*:*:security-group/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "glue:RoleAssumedBy": "glue.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AllowGlueCreateEniOnSecurityGroup"
                }, 
                {
                    "Action": [
                        "ec2:CreateNetworkInterface"
                    ], 
                    "Resource": "arn:aws:ec2:*:*:subnet/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "glue:RoleAssumedBy": "glue.amazonaws.com"
                        }
                    }, 
                    "Sid": "AllowGlueCreateEniOnSubnet"
                }, 
                {
                    "Action": [
                        "ec2:DeleteNetworkInterface", 
                        "ec2:AttachNetworkInterface"
                    ], 
                    "Resource": "arn:aws:ec2:*:*:network-interface/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/aws-glue-service-resource": "false"
                        }, 
                        "StringEquals": {
                            "glue:RoleAssumedBy": "glue.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AllowManageGlueEni"
                }, 
                {
                    "Action": [
                        "ec2:AttachNetworkInterface"
                    ], 
                    "Resource": "arn:aws:ec2:*:*:instance/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "glue:RoleAssumedBy": "glue.amazonaws.com"
                        }, 
                        "StringNotEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AllowAttachGlueEniOnInstance"
                }, 
                {
                    "Action": [
                        "ec2:DescribeNetworkInterfaces"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "glue:RoleAssumedBy": "glue.amazonaws.com"
                        }
                    }, 
                    "Sid": "AllowDescribeGlueEni"
                }, 
                {
                    "Action": [
                        "secretsmanager:DescribeSecret", 
                        "secretsmanager:GetSecretValue"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "glue:RoleAssumedBy": "glue.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "FederatedDataConnectionGlueSecret"
                }, 
                {
                    "Action": [
                        "ec2:DescribeVpcEndpoints", 
                        "ec2:DescribeSubnets", 
                        "ec2:DescribeRouteTables", 
                        "ec2:DescribeSecurityGroups", 
                        "glue:ListSessions", 
                        "ec2:DescribeVpcs"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "GlueKernelPermissions"
                }, 
                {
                    "Action": [
                        "glue:CreateSession", 
                        "glue:CreateBlueprint", 
                        "glue:CreateJob", 
                        "glue:CreateDataQualityRuleset", 
                        "glue:CreateWorkflow", 
                        "glue:TagResource"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:session/*", 
                        "arn:aws:glue:*:*:blueprint/*", 
                        "arn:aws:glue:*:*:job/*", 
                        "arn:aws:glue:*:*:dataQualityRuleset/*", 
                        "arn:aws:glue:*:*:workflow/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "Null": {
                            "aws:TagKeys": "false"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "ProjectUserTag*"
                            ]
                        }
                    }, 
                    "Sid": "GlueCreateAndTagPermissions"
                }, 
                {
                    "Action": [
                        "glue:TagResource", 
                        "glue:UntagResource"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:session/*", 
                        "arn:aws:glue:*:*:blueprint/*", 
                        "arn:aws:glue:*:*:job/*", 
                        "arn:aws:glue:*:*:dataQualityRuleset/*", 
                        "arn:aws:glue:*:*:workflow/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringNotLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "ProjectUserTag*"
                            ]
                        }
                    }, 
                    "Sid": "GlueTagSessionPermissions"
                }, 
                {
                    "Action": [
                        "glue:CancelStatement", 
                        "glue:GetSession", 
                        "glue:ListStatements", 
                        "glue:DeleteSession", 
                        "glue:RunStatement", 
                        "glue:GetStatement", 
                        "glue:StopSession", 
                        "glue:GetDashboardUrl", 
                        "glue:NotifyEvent", 
                        "glue:StartBlueprintRun", 
                        "glue:PutWorkflowRunProperties", 
                        "glue:DeleteJob", 
                        "glue:DeleteWorkflow", 
                        "glue:DeleteBlueprint", 
                        "glue:UpdateWorkflow", 
                        "glue:UpdateJob", 
                        "glue:StartWorkflowRun", 
                        "glue:ResumeWorkflowRun", 
                        "glue:UpdateBlueprint", 
                        "glue:BatchStopJobRun", 
                        "glue:StopWorkflowRun", 
                        "glue:StartJobRun", 
                        "glue:CancelDataQualityRuleRecommendationRun", 
                        "glue:CancelDataQualityRulesetEvaluationRun", 
                        "glue:DeleteDataQualityRuleset", 
                        "glue:GetDataQualityModel", 
                        "glue:GetDataQualityModelResult", 
                        "glue:GetDataQualityResult", 
                        "glue:GetDataQualityRuleRecommendationRun", 
                        "glue:GetDataQualityRuleset", 
                        "glue:GetDataQualityRulesetEvaluationRun", 
                        "glue:ListDataQualityResults", 
                        "glue:ListDataQualityRuleRecommendationRuns", 
                        "glue:ListDataQualityRulesetEvaluationRuns", 
                        "glue:ListDataQualityRulesets", 
                        "glue:PublishDataQuality", 
                        "glue:PutDataQualityProfileAnnotation", 
                        "glue:PutDataQualityStatisticAnnotation", 
                        "glue:StartDataQualityRuleRecommendationRun", 
                        "glue:StartDataQualityRulesetEvaluationRun", 
                        "glue:UpdateDataQualityRuleset", 
                        "glue:GetJobRun", 
                        "glue:GetJobRuns", 
                        "glue:BatchGetJobs", 
                        "glue:GetJob"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:session/*", 
                        "arn:aws:glue:*:*:blueprint/*", 
                        "arn:aws:glue:*:*:job/*", 
                        "arn:aws:glue:*:*:dataQualityRuleset/*", 
                        "arn:aws:glue:*:*:workflow/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GluePermissions"
                }, 
                {
                    "Action": [
                        "glue:ListJobs"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableGlueWorkloadsPermissions": "true", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueListJobsPermissions"
                }, 
                {
                    "Action": [
                        "glue:GetGeneratedCode"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "GlueVisualETLPermissions"
                }, 
                {
                    "Action": [
                        "glue:StartCompletion", 
                        "glue:GetCompletion"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:completion/*", 
                        "arn:aws:glue:*:*:job/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "GlueCompletionsPermissions"
                }, 
                {
                    "Action": [
                        "logs:CreateLogGroup", 
                        "logs:CreateLogStream", 
                        "logs:PutLogEvents"
                    ], 
                    "Resource": "arn:aws:logs:*:*:log-group:/aws-glue/*", 
                    "Effect": "Allow", 
                    "Sid": "GlueJobRunnerSessionLogPermissions"
                }, 
                {
                    "Action": [
                        "ec2:DeleteTags", 
                        "ec2:CreateTags"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:network-interface/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "glue:RoleAssumedBy": "glue.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "Null": {
                            "aws:TagKeys": "false"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "aws-glue-*"
                            ]
                        }
                    }, 
                    "Sid": "EC2TagsPermissionsForGlue"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:Encrypt", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "kms:EncryptionContext:glue_catalog_id": "${aws:PrincipalAccount}", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "StringLike": {
                            "kms:ViaService": [
                                "glue.*.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "GlueKmsPermissions"
                }, 
                {
                    "Action": [
                        "emr-serverless:AccessInteractiveEndpoints", 
                        "emr-serverless:AccessLivyEndpoints", 
                        "emr-serverless:GetApplication", 
                        "emr-serverless:StartApplication", 
                        "emr-serverless:StopApplication"
                    ], 
                    "Resource": "arn:aws:emr-serverless:*:*:/applications/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "EmrServerlessInteractivePermissions"
                }, 
                {
                    "Action": [
                        "emr-serverless:GetDashboardForJobRun", 
                        "emr-serverless:GetJobRun"
                    ], 
                    "Resource": [
                        "arn:aws:emr-serverless:*:*:/applications/*/jobruns/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "EmrServerlessJobAccessPermissions"
                }, 
                {
                    "Action": [
                        "airflow:GetEnvironment", 
                        "airflow:UpdateEnvironment"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "AirflowActionsForTaggedEnvironments"
                }, 
                {
                    "Action": [
                        "airflow:ListEnvironments"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "AirflowListEnvironments"
                }, 
                {
                    "Action": [
                        "airflow:CreateWebLoginToken", 
                        "airflow:InvokeRestApi"
                    ], 
                    "Resource": [
                        "arn:aws:airflow:*:*:role/DataZoneMWAAEnv-${aws:PrincipalTag/AmazonDataZoneDomain}-${aws:PrincipalTag/AmazonDataZoneProject}-${aws:PrincipalTag/AmazonDataZoneScopeName}/User"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "AirflowUiApiAccess"
                }, 
                {
                    "Action": [
                        "logs:CreateLogStream", 
                        "logs:CreateLogGroup", 
                        "logs:PutLogEvents", 
                        "logs:GetLogEvents", 
                        "logs:GetLogRecord", 
                        "logs:GetLogGroupFields", 
                        "logs:GetQueryResults"
                    ], 
                    "Resource": [
                        "arn:aws:logs:*:*:log-group:airflow-DataZoneMWAAEnv-${aws:PrincipalTag/AmazonDataZoneDomain}-${aws:PrincipalTag/AmazonDataZoneProject}-${aws:PrincipalTag/AmazonDataZoneScopeName}-*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "AirflowCloudwatchLogsActions"
                }, 
                {
                    "Action": [
                        "cloudwatch:PutMetricData"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "cloudwatch:namespace": "AmazonMWAA"
                        }
                    }, 
                    "Sid": "AirflowCloudwatchActions"
                }, 
                {
                    "Action": [
                        "cloudwatch:PutMetricData"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "cloudwatch:namespace": [
                                "Glue", 
                                "AWS/Glue"
                            ]
                        }
                    }, 
                    "Sid": "GlueJobCloudwatchPutMetricActions"
                }, 
                {
                    "Action": "s3:GetAccountPublicAccessBlock", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AirflowS3GetAccountPublicAccessBlock"
                }, 
                {
                    "Action": [
                        "sqs:ChangeMessageVisibility", 
                        "sqs:DeleteMessage", 
                        "sqs:GetQueueAttributes", 
                        "sqs:GetQueueUrl", 
                        "sqs:ReceiveMessage", 
                        "sqs:SendMessage"
                    ], 
                    "Resource": [
                        "arn:aws:sqs:*:*:airflow-celery-*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringNotEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AirflowSqsActions"
                }, 
                {
                    "Action": [
                        "s3:GetEncryptionConfiguration", 
                        "s3:GetBucketPublicAccessBlock"
                    ], 
                    "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AirflowS3BucketActions"
                }, 
                {
                    "Action": [
                        "s3:GetBucketLocation"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "DataLakeS3BucketActions"
                }, 
                {
                    "Action": [
                        "s3:GetObject*", 
                        "s3:ListMultipartUploadParts", 
                        "s3:ListBucket"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringNotEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "DataLakeCrossAccountS3Permissions"
                }, 
                {
                    "Action": [
                        "kms:ListGrants", 
                        "kms:GetPublicKey", 
                        "kms:DescribeKey"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "kms:ViaService": "s3.*.amazonaws.com"
                        }, 
                        "StringNotEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "DataLakeCrossAccountKMSPermissions"
                }, 
                {
                    "Action": [
                        "kms:Decrypt"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAnyValue:StringEquals": {
                            "kms:EncryptionContextKeys": "aws:s3:arn"
                        }, 
                        "StringLike": {
                            "kms:ViaService": "s3.*.amazonaws.com"
                        }, 
                        "StringNotEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "DataLakeCrossAccountDecryptKMSPermissions"
                }, 
                {
                    "Action": [
                        "s3:ListBucket", 
                        "s3:ListBucketVersions"
                    ], 
                    "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "StringLike": {
                            "s3:prefix": [
                                "${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}", 
                                "${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}/*"
                            ]
                        }, 
                        "StringNotEquals": {
                            "aws:PrincipalTag/DomainBucketName": "", 
                            "aws:PrincipalTag/AmazonDataZoneProject": "", 
                            "aws:PrincipalTag/AmazonDataZoneDomain": ""
                        }
                    }, 
                    "Sid": "ListDomainS3BucketPermissions"
                }, 
                {
                    "Action": [
                        "s3:ListBucket"
                    ], 
                    "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "StringNotEquals": {
                            "aws:PrincipalTag/DomainBucketName": ""
                        }
                    }, 
                    "Sid": "AirflowListDomainS3BucketPermissions"
                }, 
                {
                    "Action": [
                        "s3:ListBucket"
                    ], 
                    "Resource": [
                        "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ArnEquals": {
                            "lambda:SourceFunctionArn": "arn:aws:lambda:*:*:function:athenafederatedcatalog_*"
                        }
                    }, 
                    "Sid": "ListDomainBucketFromAthenaFederatedCatalog"
                }, 
                {
                    "Action": [
                        "s3:GetObject*", 
                        "s3:PutObject", 
                        "s3:PutObjectRetention", 
                        "s3:RestoreObject", 
                        "s3:ReplicateObject", 
                        "s3:DeleteObject", 
                        "s3:DeleteObjectVersion", 
                        "s3:ListMultipartUploadParts", 
                        "s3:AbortMultipartUpload"
                    ], 
                    "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}/${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "StringNotEquals": {
                            "aws:PrincipalTag/DomainBucketName": "", 
                            "aws:PrincipalTag/AmazonDataZoneProject": "", 
                            "aws:PrincipalTag/AmazonDataZoneDomain": ""
                        }
                    }, 
                    "Sid": "AccessDomainS3BucketPermissions"
                }, 
                {
                    "Action": "s3:GetBucketAcl", 
                    "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AccessLevelControlS3BucketPermissions"
                }, 
                {
                    "Action": "s3:PutObjectTagging", 
                    "Resource": "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}/${aws:PrincipalTag/AmazonDataZoneDomain}/${aws:PrincipalTag/AmazonDataZoneProject}/genAI/assets/evaluations/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "s3:RequestObjectTag/ContainsReferenceResponseForAllPrompts": [
                                "true", 
                                "false"
                            ], 
                            "s3:RequestObjectTag/BasicValidationStatus": [
                                "valid", 
                                "invalid"
                            ]
                        }, 
                        "StringNotEquals": {
                            "aws:PrincipalTag/DomainBucketName": "", 
                            "aws:PrincipalTag/AmazonDataZoneProject": "", 
                            "aws:PrincipalTag/AmazonDataZoneDomain": ""
                        }, 
                        "ForAllValues:StringEquals": {
                            "s3:RequestObjectTagKeys": [
                                "BasicValidationStatus", 
                                "ContainsReferenceResponseForAllPrompts"
                            ]
                        }
                    }, 
                    "Sid": "TagS3ObjectPermissionsForBedrockEvaluation"
                }, 
                {
                    "Action": [
                        "kms:GenerateDataKey", 
                        "kms:Decrypt"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ArnLike": {
                            "kms:EncryptionContext:aws:s3:arn": [
                                "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}", 
                                "arn:aws:s3:::${aws:PrincipalTag/DomainBucketName}/*"
                            ]
                        }, 
                        "StringLike": {
                            "kms:ViaService": "s3.*.amazonaws.com"
                        }
                    }, 
                    "Sid": "AccessDomainS3BucketKmsPermissions"
                }, 
                {
                    "Action": [
                        "kms:GenerateDataKey", 
                        "kms:Decrypt"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/DomainKmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "kms:EncryptionContext:aws:datazone:domainId": "${aws:PrincipalTag/AmazonDataZoneDomain}", 
                            "kms:ViaService": [
                                "datazone.*.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "DZDomainKMSKeyXAcctPerm"
                }, 
                {
                    "Action": [
                        "logs:DescribeLogGroups"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "ListLogGroupsPermissions"
                }, 
                {
                    "Action": [
                        "logs:DescribeLogStreams", 
                        "logs:StartQuery", 
                        "logs:GetLogEvents", 
                        "logs:GetLogRecord", 
                        "logs:GetLogGroupFields", 
                        "logs:GetQueryResults", 
                        "logs:PutLogEvents", 
                        "logs:CreateLogGroup", 
                        "logs:CreateLogStream", 
                        "logs:FilterLogEvents"
                    ], 
                    "Resource": [
                        "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}/*", 
                        "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}/*:log-stream:*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "GlueJobLogGroupPermissions"
                }, 
                {
                    "Action": [
                        "logs:DescribeLogStreams", 
                        "logs:StartQuery", 
                        "logs:GetLogEvents", 
                        "logs:GetLogRecord", 
                        "logs:GetLogGroupFields", 
                        "logs:GetQueryResults", 
                        "logs:PutLogEvents", 
                        "logs:CreateLogStream", 
                        "logs:FilterLogEvents"
                    ], 
                    "Resource": [
                        "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}", 
                        "arn:aws:logs:*:*:log-group:${aws:PrincipalTag/LogGroupName}:log-stream:*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "ProjectLogGroupPermissions"
                }, 
                {
                    "Action": [
                        "logs:StopQuery"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "CloudWatchStopQuery"
                }, 
                {
                    "Action": [
                        "athena:TerminateSession", 
                        "athena:CreatePreparedStatement", 
                        "athena:StopCalculationExecution", 
                        "athena:StartQueryExecution", 
                        "athena:UpdatePreparedStatement", 
                        "athena:BatchGetNamedQuery", 
                        "athena:BatchGetPreparedStatement", 
                        "athena:BatchGetQueryExecution", 
                        "athena:UpdateNotebook", 
                        "athena:DeleteNotebook", 
                        "athena:DeletePreparedStatement", 
                        "athena:UpdateNotebookMetadata", 
                        "athena:DeleteNamedQuery", 
                        "athena:GetCalculationExecution", 
                        "athena:GetCalculationExecutionCode", 
                        "athena:GetCalculationExecutionStatus", 
                        "athena:GetNamedQuery", 
                        "athena:GetNotebookMetadata", 
                        "athena:GetPreparedStatement", 
                        "athena:GetQueryExecution", 
                        "athena:GetQueryResults", 
                        "athena:GetQueryResultsStream", 
                        "athena:GetQueryRuntimeStatistics", 
                        "athena:GetSession", 
                        "athena:GetSessionStatus", 
                        "athena:GetWorkGroup", 
                        "athena:UpdateNamedQuery", 
                        "athena:CreateNamedQuery", 
                        "athena:ExportNotebook", 
                        "athena:StopQueryExecution", 
                        "athena:StartCalculationExecution", 
                        "athena:StartSession", 
                        "athena:CreatePresignedNotebookUrl", 
                        "athena:CreateNotebook", 
                        "athena:ImportNotebook", 
                        "athena:ListQueryExecutions", 
                        "athena:ListTagsForResource", 
                        "athena:ListNamedQueries", 
                        "athena:ListPreparedStatements"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "DataLakeAthenaPermissions"
                }, 
                {
                    "Action": [
                        "athena:GetDatabase", 
                        "athena:GetDataCatalog", 
                        "athena:GetTableMetadata", 
                        "athena:ListDatabases", 
                        "athena:ListTableMetadata"
                    ], 
                    "Resource": [
                        "arn:aws:athena:*:*:datacatalog/AwsDataCatalog", 
                        "arn:aws:athena:*:*:datacatalog/awsdatacatalog"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "DefaultAthenaDataCatalogPermissions"
                }, 
                {
                    "Action": [
                        "athena:ListDataCatalogs", 
                        "athena:ListEngineVersions", 
                        "athena:ListWorkGroups"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "AthenaListPermissions"
                }, 
                {
                    "Action": [
                        "datazone:CreateConnection", 
                        "datazone:DeleteConnection", 
                        "datazone:GetConnection", 
                        "datazone:GetDomain", 
                        "datazone:GetDomainExecutionRoleCredentials", 
                        "datazone:GetEnvironment", 
                        "datazone:GetEnvironmentBlueprintConfiguration", 
                        "datazone:GetProject", 
                        "datazone:GetUserProfile", 
                        "datazone:ListConnections", 
                        "datazone:ListEnvironments", 
                        "datazone:ListEnvironmentBlueprints", 
                        "datazone:ListProjects", 
                        "datazone:UpdateConnection", 
                        "datazone:PostLineageEvent"
                    ], 
                    "Resource": "arn:aws:datazone:*:*:domain/${aws:PrincipalTag/AmazonDataZoneDomain}", 
                    "Effect": "Allow", 
                    "Sid": "DataZoneUserPermissions"
                }, 
                {
                    "Action": [
                        "glue:GetDatabase"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog", 
                        "arn:aws:glue:*:*:database/default"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "GlueGetDefaultDatabase"
                }, 
                {
                    "Action": "glue:GetDatabases", 
                    "NotResource": "arn:aws:glue:*:*:database/default", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "glue:LakeFormationPermissions": "Enabled"
                        }
                    }, 
                    "Sid": "AllowGlueGetDatabasesExceptDefault"
                }, 
                {
                    "Action": [
                        "glue:GetDatabases"
                    ], 
                    "Resource": "arn:aws:glue:*:*:catalog", 
                    "Effect": "Allow", 
                    "Sid": "GlueListDatabasesOnNoDatabases"
                }, 
                {
                    "Action": [
                        "glue:GetClassifier", 
                        "glue:GetClassifiers", 
                        "glue:UseGlueStudio"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "GlueFileUploadPermissions"
                }, 
                {
                    "Action": [
                        "glue:PassConnection", 
                        "glue:GetConnection", 
                        "glue:GetConnections"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "GlueProjectConnectionPermissions"
                }, 
                {
                    "Action": [
                        "glue:GetConnection", 
                        "glue:GetConnections"
                    ], 
                    "Resource": "arn:aws:glue:*:*:catalog", 
                    "Effect": "Allow", 
                    "Sid": "GlueGetConnectionOnlyOnCatalog"
                }, 
                {
                    "Action": [
                        "glue:CreateTable", 
                        "glue:DeleteTable", 
                        "glue:BatchDeleteTable", 
                        "glue:UpdateTable", 
                        "glue:BatchCreatePartition", 
                        "glue:CreatePartition", 
                        "glue:DeletePartition", 
                        "glue:BatchDeletePartition", 
                        "glue:UpdatePartition", 
                        "glue:BatchGetPartition", 
                        "glue:BatchGetTableOptimizer", 
                        "glue:GetCatalogImportStatus", 
                        "glue:GetColumnStatisticsForPartition", 
                        "glue:GetColumnStatisticsForTable", 
                        "glue:GetColumnStatisticsTaskRun", 
                        "glue:GetColumnStatisticsTaskRuns", 
                        "glue:GetDatabase", 
                        "glue:GetPartition", 
                        "glue:GetPartitionIndexes", 
                        "glue:GetPartitions", 
                        "glue:GetTable", 
                        "glue:GetTableOptimizer", 
                        "glue:GetTableVersion", 
                        "glue:GetTableVersions", 
                        "glue:GetTables", 
                        "glue:SearchTables", 
                        "glue:ListTableOptimizerRuns", 
                        "glue:CreatePartitionIndex", 
                        "glue:BatchUpdatePartition", 
                        "glue:DeleteTableVersion", 
                        "glue:DeleteColumnStatisticsForPartition", 
                        "glue:DeleteColumnStatisticsForTable", 
                        "glue:DeletePartitionIndex", 
                        "glue:UpdateColumnStatisticsForPartition", 
                        "glue:UpdateColumnStatisticsForTable", 
                        "glue:BatchDeleteTableVersion", 
                        "glue:GetCatalogs", 
                        "glue:GetCatalog"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "glue:LakeFormationPermissions": "Enabled"
                        }
                    }, 
                    "Sid": "GlueDatalakePermissions"
                }, 
                {
                    "Action": "glue:ListCrawls", 
                    "Resource": "arn:aws:glue:*:*:crawler/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueCrawlerPermissions"
                }, 
                {
                    "Action": [
                        "glue:CreateDatabase", 
                        "glue:DeleteDatabase", 
                        "glue:GetDatabase"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:database/global_temp", 
                        "arn:aws:glue:*:*:catalog"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "GlueGlobalTempDatabasePermissions"
                }, 
                {
                    "Action": [
                        "glue:GetCatalog", 
                        "glue:UpdateCatalog"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "glue:LakeFormationPermissions": "Enabled"
                        }
                    }, 
                    "Sid": "GlueDefaultCatalogsPermissions"
                }, 
                {
                    "Action": [
                        "glue:GetCatalog", 
                        "glue:UpdateCatalog"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "glue:LakeFormationPermissions": "Enabled"
                        }
                    }, 
                    "Sid": "GlueNonDefaultCatalogsPermissions"
                }, 
                {
                    "Action": [
                        "glue:CreateDatabase", 
                        "glue:DeleteDatabase", 
                        "glue:GetDatabase"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:database/*", 
                        "arn:aws:glue:*:*:catalog/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "GlueCatalogDatabasePermissions"
                }, 
                {
                    "Action": [
                        "lakeformation:GetDataAccess"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "LakeFormationPermissionForDataLakeAccess"
                }, 
                {
                    "Action": [
                        "iam:ListRoles"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "IAMListRoles"
                }, 
                {
                    "Action": [
                        "iam:GetRole"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "IAMGetRole"
                }, 
                {
                    "Action": [
                        "sts:AssumeRole"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringNotEquals": {
                            "aws:PrincipalTag/AmazonDataZoneProject": ""
                        }
                    }, 
                    "Sid": "AllowAssumeAccessRole"
                }, 
                {
                    "Action": "sts:SetSourceIdentity", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "sts:SourceIdentity": "${aws:PrincipalTag/datazone:userId}"
                        }
                    }, 
                    "Sid": "SetSourceIdentityForAssumeAccessRole"
                }, 
                {
                    "Action": "sts:TagSession", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:RequestTag/AmazonDataZoneDomain": "${aws:PrincipalTag/AmazonDataZoneDomain}"
                        }, 
                        "ForAllValues:StringEquals": {
                            "aws:TagKeys": [
                                "AmazonDataZoneProject", 
                                "AmazonDataZoneDomain"
                            ]
                        }
                    }, 
                    "Sid": "TagSessionForAssumeAccessRole"
                }, 
                {
                    "Action": [
                        "sts:SetContext"
                    ], 
                    "Resource": [
                        "arn:aws:sts::*:self"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAnyValue:StringEquals": {
                            "aws:CalledVia": [
                                "sqlworkbench.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "SetContextForTrustedIdentityPropagation"
                }, 
                {
                    "Action": [
                        "glue:GetConnection", 
                        "glue:GetConnections", 
                        "glue:GetTags"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "FederatedDataConnectionPermissions"
                }, 
                {
                    "Action": [
                        "glue:ListConnectionTypes", 
                        "glue:DescribeConnectionType"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "UnRestrictedAccessForGlueEntities"
                }, 
                {
                    "Action": [
                        "glue:ListEntities", 
                        "glue:DescribeEntity", 
                        "glue:GetEntityRecords"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "GlueEntitiesAccessForFederatedDatabase"
                }, 
                {
                    "Action": [
                        "iam:PassRole"
                    ], 
                    "Resource": "arn:aws:iam::*:role/${aws:PrincipalTag/RoleName}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:PassedToService": [
                                "sagemaker.amazonaws.com", 
                                "glue.amazonaws.com", 
                                "airflow.amazonaws.com", 
                                "emr-serverless.amazonaws.com", 
                                "scheduler.amazonaws.com", 
                                "access-grants.s3.amazonaws.com"
                            ], 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AllowPassRoleOnProjectRoles"
                }, 
                {
                    "Action": [
                        "sqlworkbench:PutTab", 
                        "sqlworkbench:DeleteTab", 
                        "sqlworkbench:DriverExecute", 
                        "sqlworkbench:GetUserInfo", 
                        "sqlworkbench:ListTabs", 
                        "sqlworkbench:GetAutocompletionMetadata", 
                        "sqlworkbench:GetAutocompletionResource", 
                        "sqlworkbench:PassAccountSettings", 
                        "sqlworkbench:ListQueryExecutionHistory", 
                        "sqlworkbench:GetQueryExecutionHistory", 
                        "sqlworkbench:CreateConnection", 
                        "sqlworkbench:PutQCustomContext", 
                        "sqlworkbench:GetQCustomContext", 
                        "sqlworkbench:DeleteQCustomContext", 
                        "sqlworkbench:GetQSqlRecommendations", 
                        "sqlworkbench:GetQSqlPromptQuotas", 
                        "sqlworkbench:GetSchemaInference"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "SQLWorkBenchActionsWithoutResourceType"
                }, 
                {
                    "Action": [
                        "redshift-data:DescribeStatement", 
                        "redshift-data:GetStatementResult", 
                        "redshift-data:CancelStatement", 
                        "redshift-data:ListStatements"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "redshift-data:statement-owner-iam-userid": "${aws:userid}"
                        }
                    }, 
                    "Sid": "RedshiftDataActionsIAMSessionRestriction"
                }, 
                {
                    "Action": [
                        "redshift-data:BatchExecuteStatement", 
                        "redshift-data:ExecuteStatement", 
                        "redshift-data:DescribeTable", 
                        "redshift-data:ListDatabases", 
                        "redshift-data:ListSchemas", 
                        "redshift-data:ListTables"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "RedshiftDataActionsForResources"
                }, 
                {
                    "Action": [
                        "redshift-serverless:GetWorkgroup", 
                        "redshift-serverless:GetNamespace", 
                        "redshift-serverless:ListTagsForResource", 
                        "redshift-serverless:GetCredentials", 
                        "redshift:DescribeTags", 
                        "redshift:GetClusterCredentialsWithIAM", 
                        "redshift-data:BatchExecuteStatement", 
                        "redshift-data:ExecuteStatement", 
                        "redshift-data:DescribeTable", 
                        "redshift-data:ListDatabases", 
                        "redshift-data:ListSchemas", 
                        "redshift-data:ListTables"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneEnvironment": "true"
                        }, 
                        "StringEquals": {
                            "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
                        }
                    }, 
                    "Sid": "AllowAccessExistingRedshiftCompute"
                }, 
                {
                    "Action": [
                        "redshift-serverless:ListNamespaces", 
                        "redshift-serverless:ListWorkgroups", 
                        "redshift:DescribeClusters"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "RedshiftWithoutResourceType"
                }, 
                {
                    "Action": [
                        "redshift-serverless:GetWorkgroup", 
                        "redshift-serverless:ListTagsForResource", 
                        "redshift-serverless:GetNamespace", 
                        "redshift:DescribeTags"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "RedshiftServerlessWorkgroupWithResourceType"
                }, 
                {
                    "Action": [
                        "redshift:GetClusterCredentialsWithIAM"
                    ], 
                    "Resource": "arn:aws:redshift:*:*:dbname:*/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Bool": {
                            "aws:ViaAWSService": "true"
                        }
                    }, 
                    "Sid": "RedshiftExistingComputeConnectToCatalog"
                }, 
                {
                    "Action": "secretsmanager:ListSecrets", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "AllowListSecrets"
                }, 
                {
                    "Action": [
                        "redshift-serverless:GetCredentials", 
                        "redshift:GetClusterCredentialsWithIAM"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "RedshiftGetCredentials"
                }, 
                {
                    "Action": [
                        "redshift-data:BatchExecuteStatement", 
                        "redshift-data:ExecuteStatement", 
                        "redshift-data:DescribeStatement", 
                        "redshift-data:GetStatementResult", 
                        "redshift-data:CancelStatement", 
                        "redshift-data:GetStagingBucketLocation", 
                        "redshift-serverless:GetManagedWorkgroup"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "redshift-data:glue-catalog-arn": "arn:aws:glue:*:*:catalog/*"
                        }
                    }, 
                    "Sid": "RedshiftDataActionsForManagedWorkgroup"
                }, 
                {
                    "Action": [
                        "redshift-serverless:GetCredentials"
                    ], 
                    "Resource": "arn:aws:redshift-serverless:*:*:workgroup/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAnyValue:StringEquals": {
                            "aws:CalledVia": [
                                "redshift-data.amazonaws.com", 
                                "sqlworkbench.amazonaws.com"
                            ]
                        }, 
                        "Bool": {
                            "aws:ViaAWSService": "true"
                        }
                    }, 
                    "Sid": "RedshifServerlessCredentialsForManagedWorkgroup"
                }, 
                {
                    "Action": "tag:GetResources", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaLast": "sqlworkbench.amazonaws.com"
                        }
                    }, 
                    "Sid": "AllowTagGetResources"
                }, 
                {
                    "Action": [
                        "secretsmanager:GetSecretValue"
                    ], 
                    "Resource": "arn:aws:secretsmanager:*:*:secret:*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AllowGetSecretForRedShift"
                }, 
                {
                    "Action": [
                        "cloudwatch:GetMetricData", 
                        "cloudwatch:GetMetricStatistics"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "CloudWatchMetricsPermissions"
                }, 
                {
                    "Action": [
                        "q:StartConversation", 
                        "q:SendMessage"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "AmazonQChatPermissions"
                }, 
                {
                    "Action": [
                        "elasticmapreduce:DescribeCluster", 
                        "elasticmapreduce:ListInstances", 
                        "elasticmapreduce:ListInstanceFleets", 
                        "elasticmapreduce:ListInstanceGroups", 
                        "elasticmapreduce:ListBootstrapActions", 
                        "elasticmapreduce:GetManagedScalingPolicy", 
                        "elasticmapreduce:GetOnClusterAppUIPresignedURL"
                    ], 
                    "Resource": [
                        "arn:aws:elasticmapreduce:*:*:cluster/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "EMRClusterWithDataZoneTags"
                }, 
                {
                    "Action": [
                        "elasticmapreduce:ListReleaseLabels", 
                        "elasticmapreduce:ListSupportedInstanceTypes", 
                        "elasticmapreduce:ListClusters", 
                        "elasticmapreduce:CreatePersistentAppUI", 
                        "elasticmapreduce:DescribePersistentAppUI", 
                        "pricing:GetProducts"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "EMRClusterInfoPermissions"
                }, 
                {
                    "Action": [
                        "elasticmapreduce:GetClusterSessionCredentials"
                    ], 
                    "Resource": [
                        "arn:aws:elasticmapreduce:*:*:cluster/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "ArnLike": {
                            "elasticmapreduce:ExecutionRoleArn": "arn:aws:iam::*:role/${aws:PrincipalTag/RoleName}"
                        }, 
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "EMRGetClusterSessionCredentials"
                }, 
                {
                    "Action": [
                        "elasticmapreduce:GetPersistentAppUIPresignedURL"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ArnLike": {
                            "elasticmapreduce:ExecutionRoleArn": "arn:aws:iam::*:role/${aws:PrincipalTag/RoleName}"
                        }
                    }, 
                    "Sid": "EMRPersistentAppUI"
                }, 
                {
                    "Action": [
                        "kms:CreateGrant", 
                        "kms:ReEncryptFrom", 
                        "kms:ReEncryptTo", 
                        "kms:Decrypt", 
                        "kms:Encrypt", 
                        "kms:GenerateDataKey", 
                        "kms:GenerateDataKeyWithoutPlaintext"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "Null": {
                            "kms:EncryptionContextKeys": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": [
                                "sqs.*.amazonaws.com", 
                                "sagemaker.*.amazonaws.com", 
                                "bedrock.*.amazonaws.com", 
                                "s3.*.amazonaws.com", 
                                "scheduler.*.amazonaws.com", 
                                "glue.*.amazonaws.com", 
                                "secretsmanager.*.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "KmsWithEncryptPermissions"
                }, 
                {
                    "Action": [
                        "kms:CreateGrant", 
                        "kms:ReEncryptFrom", 
                        "kms:ReEncryptTo", 
                        "kms:Decrypt", 
                        "kms:GenerateDataKey", 
                        "kms:GenerateDataKeyWithoutPlaintext"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "Null": {
                            "kms:EncryptionContextKeys": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": [
                                "emr-serverless.*.amazonaws.com", 
                                "redshift.*.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "KmsPermissions"
                }, 
                {
                    "Action": [
                        "kms:ListGrants", 
                        "kms:RevokeGrant", 
                        "kms:DescribeKey"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "StringLike": {
                            "kms:ViaService": [
                                "sqs.*.amazonaws.com", 
                                "sagemaker.*.amazonaws.com", 
                                "emr-serverless.*.amazonaws.com", 
                                "s3.*.amazonaws.com", 
                                "redshift.*.amazonaws.com", 
                                "codecommit.*.amazonaws.com", 
                                "scheduler.*.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "KmsManagementPermissions"
                }, 
                {
                    "Action": [
                        "kms:CreateGrant", 
                        "kms:Decrypt", 
                        "kms:Encrypt", 
                        "kms:GenerateDataKey", 
                        "kms:GenerateDataKeyWithoutPlaintext"
                    ], 
                    "Resource": [
                        "arn:aws:kms:*:*:key/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "kms:EncryptionContextKeys": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": [
                                "s3.*.amazonaws.com", 
                                "sqs.*.amazonaws.com", 
                                "sagemaker.*.amazonaws.com"
                            ]
                        }, 
                        "StringNotEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AwsOwnedKmsKeyPermissions"
                }, 
                {
                    "Action": [
                        "kms:DescribeKey"
                    ], 
                    "Resource": [
                        "arn:aws:kms:*:*:key/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "kms:ViaService": [
                                "sqs.*.amazonaws.com", 
                                "sagemaker.*.amazonaws.com"
                            ]
                        }, 
                        "StringNotEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AwsOwnedKmsManagementPermissions"
                }, 
                {
                    "Action": [
                        "kms:ListAliases"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ListKMSPermissions"
                }, 
                {
                    "Action": [
                        "ec2:DescribeInstanceTypes"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "EC2PermissionsForNotebookExecution"
                }, 
                {
                    "Action": [
                        "bedrock:InvokeModel", 
                        "bedrock:InvokeModelWithResponseStream"
                    ], 
                    "Resource": [
                        "arn:aws:bedrock:*::foundation-model/*", 
                        "arn:aws:bedrock:*:*:custom-model/*", 
                        "arn:aws:bedrock:*:*:provisioned-model/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "bedrock:InferenceProfileArn": "false"
                        }, 
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "InvokeBedrockModelPermissions"
                }, 
                {
                    "Action": [
                        "bedrock:InvokeModel", 
                        "bedrock:InvokeModelWithResponseStream"
                    ], 
                    "Resource": [
                        "arn:aws:bedrock:*::foundation-model/*", 
                        "arn:aws:bedrock:*:*:custom-model/*", 
                        "arn:aws:bedrock:*:*:provisioned-model/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "ArnLike": {
                            "bedrock:InferenceProfileArn": "arn:aws:bedrock:*:*:application-inference-profile/*"
                        }, 
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
                        }
                    }, 
                    "Sid": "BedrockInvokeModelPermissions"
                }, 
                {
                    "Action": [
                        "bedrock:GetInferenceProfile", 
                        "bedrock:InvokeModel", 
                        "bedrock:InvokeModelWithResponseStream"
                    ], 
                    "Resource": "arn:aws:bedrock:*:*:application-inference-profile/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "InvokeBedrockModelAppInferenceProfilePermissions"
                }, 
                {
                    "Action": [
                        "bedrock:GetInferenceProfile", 
                        "bedrock:InvokeModel", 
                        "bedrock:InvokeModelWithResponseStream"
                    ], 
                    "Resource": "arn:aws:bedrock:*:*:application-inference-profile/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "BedrockInvokeModelAppInferenceProfilePermissions"
                }, 
                {
                    "Action": [
                        "bedrock:InvokeAgent", 
                        "bedrock:Retrieve", 
                        "bedrock:ListIngestionJobs", 
                        "bedrock:StartIngestionJob", 
                        "bedrock:GetIngestionJob", 
                        "bedrock:ApplyGuardrail", 
                        "bedrock:ListPrompts", 
                        "bedrock:GetPrompt", 
                        "bedrock:CreatePrompt", 
                        "bedrock:DeletePrompt", 
                        "bedrock:CreatePromptVersion", 
                        "bedrock:InvokeFlow", 
                        "bedrock:GetEvaluationJob", 
                        "bedrock:CreateEvaluationJob", 
                        "bedrock:StopEvaluationJob", 
                        "bedrock:BatchDeleteEvaluationJob", 
                        "bedrock:ListTagsForResource", 
                        "bedrock:CreateAgentAlias", 
                        "bedrock:ListAgentAliases", 
                        "bedrock:GetAgentVersion", 
                        "bedrock:ListAgentVersions", 
                        "bedrock:DeleteAgentVersion", 
                        "bedrock:DeleteAgentAlias", 
                        "bedrock:GetAgentAlias", 
                        "bedrock:UpdateAgentAlias"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "AccessBedrockResourcePermissions"
                }, 
                {
                    "Action": [
                        "bedrock:ApplyGuardrail", 
                        "bedrock:BatchDeleteEvaluationJob", 
                        "bedrock:CreateAgentAlias", 
                        "bedrock:CreateBlueprint", 
                        "bedrock:CreateBlueprintVersion", 
                        "bedrock:CreateDataAutomationProject", 
                        "bedrock:CreateEvaluationJob", 
                        "bedrock:CreatePrompt", 
                        "bedrock:CreatePromptVersion", 
                        "bedrock:DeleteAgentAlias", 
                        "bedrock:DeleteAgentVersion", 
                        "bedrock:DeleteBlueprint", 
                        "bedrock:DeleteDataAutomationProject", 
                        "bedrock:DeletePrompt", 
                        "bedrock:GetAgentAlias", 
                        "bedrock:GetAgentVersion", 
                        "bedrock:GetBlueprint", 
                        "bedrock:GetDataAutomationProject", 
                        "bedrock:GetDataAutomationStatus", 
                        "bedrock:GetEvaluationJob", 
                        "bedrock:GetIngestionJob", 
                        "bedrock:GetPrompt", 
                        "bedrock:InvokeAgent", 
                        "bedrock:InvokeDataAutomationAsync", 
                        "bedrock:InvokeFlow", 
                        "bedrock:ListAgentAliases", 
                        "bedrock:ListAgentVersions", 
                        "bedrock:ListIngestionJobs", 
                        "bedrock:ListPrompts", 
                        "bedrock:ListTagsForResource", 
                        "bedrock:Retrieve", 
                        "bedrock:StartIngestionJob", 
                        "bedrock:StopEvaluationJob", 
                        "bedrock:UpdateAgentAlias", 
                        "bedrock:UpdateBlueprint", 
                        "bedrock:UpdateDataAutomationProject", 
                        "bedrock:ListAgentActionGroups", 
                        "bedrock:ListAgentKnowledgeBases"
                    ], 
                    "Resource": "arn:aws:bedrock:*:*:*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "BedrockResourceAccessPermissions"
                }, 
                {
                    "Action": "bedrock:CreateEvaluationJob", 
                    "Resource": [
                        "arn:aws:bedrock:*::foundation-model/*", 
                        "arn:aws:bedrock:*:*:custom-model/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "CreateEvaluationJobForFoundationModelPermissions"
                }, 
                {
                    "Action": "bedrock:CreateEvaluationJob", 
                    "Resource": [
                        "arn:aws:bedrock:*:*:custom-model/*", 
                        "arn:aws:bedrock:*::foundation-model/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
                        }
                    }, 
                    "Sid": "BedrockCreateEvaluationJobPermissions"
                }, 
                {
                    "Action": [
                        "bedrock:InvokeDataAutomationAsync"
                    ], 
                    "Resource": [
                        "arn:aws:bedrock:*:*:data-automation-profile/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
                        }
                    }, 
                    "Sid": "InvokeDataAutomationAsyncPermissions"
                }, 
                {
                    "Action": "bedrock:InvokeInlineAgent", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "bedrock:InlineAgentName": "${datazone:userId}", 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }, 
                        "StringNotEquals": {
                            "bedrock:InlineAgentName": ""
                        }
                    }, 
                    "Sid": "InvokeBedrockInlineAgentPermissions"
                }, 
                {
                    "Action": "bedrock:InvokeInlineAgent", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "bedrock:InlineAgentName": "${datazone:userId}"
                        }, 
                        "StringNotEquals": {
                            "bedrock:InlineAgentName": ""
                        }
                    }, 
                    "Sid": "BedrockInvokeInlineAgentPermissions"
                }, 
                {
                    "Action": "bedrock:RetrieveAndGenerate", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "BedrockRetrieveAndGeneratePermissions"
                }, 
                {
                    "Action": "bedrock:ListEvaluationJobs", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "ListBedrockEvaluationJobPermissions"
                }, 
                {
                    "Action": [
                        "bedrock:ListEvaluationJobs", 
                        "bedrock:RetrieveAndGenerate", 
                        "bedrock:ListFoundationModels"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true"
                        }
                    }, 
                    "Sid": "BedrockNoResourcePermissions"
                }, 
                {
                    "Action": [
                        "iam:PassRole"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/AmazonBedrockEvaluationRole-${aws:PrincipalTag/AmazonDataZoneProject}-*", 
                        "arn:aws:iam::*:role/AmazonBedrockServiceRole-${aws:PrincipalTag/AmazonDataZoneProject}-*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:PassedToService": [
                                "bedrock.amazonaws.com"
                            ], 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "PassRoleToBedrockEvaluation"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/AmazonBedrockEvaluationRole-${aws:PrincipalTag/AmazonDataZoneProject}-*", 
                        "arn:aws:iam::*:role/AmazonBedrockServiceRole-${aws:PrincipalTag/AmazonDataZoneProject}-*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "iam:PassedToService": "bedrock.amazonaws.com"
                        }
                    }, 
                    "Sid": "IamPassRoleToBedrockPermissions"
                }, 
                {
                    "Action": "bedrock:TagResource", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "AmazonBedrockManaged", 
                                "ProjectUserTag*"
                            ]
                        }, 
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "TagBedrockResourcePermissions"
                }, 
                {
                    "Action": "bedrock:TagResource", 
                    "Resource": "arn:aws:bedrock:*:*:*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEqualsIfExists": {
                            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonBedrockManaged", 
                                "AmazonDataZone*", 
                                "ProjectUserTag*"
                            ]
                        }, 
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "BedrockTagResourcePermissions"
                }, 
                {
                    "Action": [
                        "kms:GenerateDataKey", 
                        "kms:Decrypt"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "kms:ViaService": "bedrock.*.amazonaws.com"
                        }, 
                        "Null": {
                            "kms:EncryptionContext:aws:bedrock:arn": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}", 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "BedrockKmsPermissions"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "kms:ViaService": "bedrock.*.amazonaws.com"
                        }, 
                        "ForAllValues:StringLike": {
                            "kms:EncryptionContextKeys": [
                                "aws:bedrock*:arn", 
                                "aws:bedrock:guardrail-id"
                            ]
                        }, 
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "KmsViaBedrockPermissions"
                }, 
                {
                    "Action": [
                        "secretsmanager:DescribeSecret", 
                        "secretsmanager:PutSecretValue"
                    ], 
                    "Resource": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock-ide/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "AccessSecretPermissionsForAmazonBedrockIDE"
                }, 
                {
                    "Action": [
                        "secretsmanager:DescribeSecret", 
                        "secretsmanager:PutSecretValue"
                    ], 
                    "Resource": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "SecretsManagerPermissionsForBedrock"
                }, 
                {
                    "Action": [
                        "kms:GenerateDataKey", 
                        "kms:Decrypt"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "kms:ViaService": "secretsmanager.*.amazonaws.com"
                        }, 
                        "ArnLike": {
                            "kms:EncryptionContext:SecretARN": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock-ide/*"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}", 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "AccessSecretKmsPermissionsForAmazonBedrockIDE"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "arn:aws:kms:*:*:key/${aws:PrincipalTag/KmsKeyId}", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "kms:ViaService": "secretsmanager.*.amazonaws.com"
                        }, 
                        "ArnLike": {
                            "kms:EncryptionContext:SecretARN": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock*"
                        }, 
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "KmsViaSecretsManagerPermissionsForBedrock"
                }, 
                {
                    "Action": "lambda:InvokeFunction", 
                    "Resource": "arn:aws:lambda:*:*:function:amazon-bedrock-ide-*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:CalledViaFirst": "bedrock.amazonaws.com", 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "InvokeFunctionPermissionsForAmazonBedrockIDE"
                }, 
                {
                    "Action": "lambda:InvokeFunction", 
                    "Resource": "arn:aws:lambda:*:*:function:amazon-bedrock*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:CalledViaFirst": "bedrock.amazonaws.com"
                        }
                    }, 
                    "Sid": "LambdaInvokeFunctionViaBedrockPermissions"
                }, 
                {
                    "Action": [
                        "cloudformation:GetTemplate", 
                        "cloudformation:DescribeStacks"
                    ], 
                    "Resource": "arn:aws:cloudformation:*:*:stack/DataZone-Env-*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:PrincipalTag/EnableAmazonBedrockIDEPermissions": "true"
                        }
                    }, 
                    "Sid": "GetDataZoneEnvironmentCloudFormationStackPermissions"
                }, 
                {
                    "Action": [
                        "cloudformation:DescribeStacks", 
                        "cloudformation:GetTemplate"
                    ], 
                    "Resource": "arn:aws:cloudformation:*:*:stack/DataZone-Env-*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:PrincipalTag/EnableAmazonBedrockPermissions": "true", 
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "CloudFormationGetDataZoneEnvironmentStackPermissions"
                }, 
                {
                    "Action": [
                        "glue:GetUserDefinedFunction", 
                        "glue:GetUserDefinedFunctions"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog", 
                        "arn:aws:glue:*:*:catalog/*", 
                        "arn:aws:glue:*:*:database/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "glue:LakeFormationPermissions": "Enabled", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GetGlueUserDefinedFuncLakeFormationPermissions"
                }, 
                {
                    "Action": [
                        "glue:GetUserDefinedFunction", 
                        "glue:GetUserDefinedFunctions"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:userDefinedFunction/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GetGlueUserDefinedFuncPermissions"
                }, 
                {
                    "Action": [
                        "secretsmanager:GetSecretValue"
                    ], 
                    "Resource": "arn:*:secretsmanager:*:*:secret:*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
                        }
                    }, 
                    "Sid": "FederatedConnectionGetSecretPermissions"
                }, 
                {
                    "Action": [
                        "logs:CreateLogGroup", 
                        "logs:CreateLogStream", 
                        "logs:PutLogEvents"
                    ], 
                    "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/athenafederatedcatalog*", 
                    "Effect": "Allow", 
                    "Sid": "FederatedConnectionLambdaLogsPermissions"
                }, 
                {
                    "Action": [
                        "dynamodb:ListTables"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "FederatedConnectionDDBPermissions"
                }, 
                {
                    "Action": [
                        "ec2:CreateNetworkInterface", 
                        "ec2:DescribeSubnets", 
                        "ec2:DetachNetworkInterface"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "ec2:Vpc": "${aws:PrincipalTag/vpcArn}"
                        }
                    }, 
                    "Sid": "FederatedConnectionEC2Permissions"
                }, 
                {
                    "Action": "ec2:DeleteNetworkInterface", 
                    "Resource": "arn:aws:ec2:*:*:*/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEqualsIfExists": {
                            "ec2:Vpc": "${aws:PrincipalTag/vpcArn}"
                        }
                    }, 
                    "Sid": "FederatedConnectionDeleteENIPermissions"
                }, 
                {
                    "Action": [
                        "ec2:DescribeNetworkInterfaces"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "FederatedConnectionDescribeENIPermissions"
                }, 
                {
                    "Action": [
                        "ecr:BatchCheckLayerAvailability", 
                        "ecr:CompleteLayerUpload", 
                        "ecr:DeleteRepository", 
                        "ecr:InitiateLayerUpload", 
                        "ecr:PutImage", 
                        "ecr:BatchDeleteImage", 
                        "ecr:ListTagsForResource", 
                        "ecr:DescribeRepositories", 
                        "ecr:ListImages", 
                        "ecr:UploadLayerPart"
                    ], 
                    "Resource": "arn:aws:ecr:*:*:repository/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "PrivateECRPermissions"
                }, 
                {
                    "Action": "ecr:CreateRepository", 
                    "Resource": "arn:aws:ecr:*:*:repository/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "CreateECRRepositoryPermission"
                }, 
                {
                    "Action": "ecr:TagResource", 
                    "Resource": "arn:aws:ecr:*:*:repository/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEqualsIfExists": {
                            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZoneProject", 
                                "ProjectUserTag*"
                            ]
                        }, 
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "ECRTagResourcePermission"
                }, 
                {
                    "Action": [
                        "ecr:UntagResource"
                    ], 
                    "Resource": "arn:aws:ecr:*:*:repository/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "ProjectUserTag*"
                            ]
                        }, 
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "ECRUntagResourcePermission"
                }, 
                {
                    "Action": [
                        "lakeformation:BatchGrantPermissions", 
                        "lakeformation:BatchRevokePermissions", 
                        "lakeformation:ListPermissions", 
                        "lakeformation:DescribeResource", 
                        "ram:GetResourceShareInvitations", 
                        "lakeformation:CreateDataCellsFilter", 
                        "lakeformation:ListDataCellsFilter", 
                        "lakeformation:DeleteDataCellsFilter", 
                        "lakeformation:GetDataCellsFilter", 
                        "lakeformation:UpdateDataCellsFilter", 
                        "ram:ListResources"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "LakeformationResourceSharingPermissions"
                }, 
                {
                    "Action": [
                        "ram:CreateResourceShare"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEqualsIfExists": {
                            "ram:RequestedResourceType": [
                                "glue:Table", 
                                "glue:Database", 
                                "glue:Catalog"
                            ]
                        }, 
                        "ForAnyValue:StringEquals": {
                            "aws:CalledVia": [
                                "lakeformation.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "CrossAccountLakeFormationResourceSharingPermissions"
                }, 
                {
                    "Action": [
                        "glue:DeleteResourcePolicy", 
                        "glue:PutResourcePolicy"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog", 
                        "arn:aws:glue:*:*:catalog/*", 
                        "arn:aws:glue:*:*:database/*", 
                        "arn:aws:glue:*:*:table/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAnyValue:StringEquals": {
                            "aws:CalledVia": [
                                "ram.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "CrossAccountRAMResourceSharingPermissions"
                }, 
                {
                    "Action": [
                        "ram:AssociateResourceShare", 
                        "ram:DisassociateResourceShare", 
                        "ram:DeleteResourceShare", 
                        "ram:ListResourceSharePermissions", 
                        "ram:UpdateResourceShare"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAnyValue:StringEquals": {
                            "aws:CalledVia": [
                                "lakeformation.amazonaws.com"
                            ]
                        }, 
                        "StringLike": {
                            "ram:ResourceShareName": [
                                "LakeFormation*"
                            ]
                        }
                    }, 
                    "Sid": "CrossAccountRAMResourceSharingViaLakeFormationPermissions"
                }, 
                {
                    "Action": [
                        "ram:GetResourceShares"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAnyValue:StringEquals": {
                            "aws:CalledVia": [
                                "lakeformation.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "RAMGetResourceSharesViaLakeFormation"
                }, 
                {
                    "Action": [
                        "ram:AcceptResourceShareInvitation"
                    ], 
                    "Resource": "arn:aws:ram:*:*:resource-share-invitation/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "ram:ResourceShareName": [
                                "LakeFormation*", 
                                "DataZoneS3AG*"
                            ]
                        }
                    }, 
                    "Sid": "CrossAccountRAMResourceShareInvitationPermission"
                }, 
                {
                    "Action": "ram:AssociateResourceSharePermission", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAnyValue:StringEquals": {
                            "aws:CalledVia": [
                                "lakeformation.amazonaws.com"
                            ]
                        }, 
                        "ArnLike": {
                            "ram:PermissionArn": "arn:aws:ram::aws:permission/AWSRAMLFEnabled*"
                        }
                    }, 
                    "Sid": "CrossAccountRAMResourceSharingViaLakeFormationHybrid"
                }, 
                {
                    "Action": [
                        "scheduler:CreateSchedule", 
                        "scheduler:GetSchedule", 
                        "scheduler:UpdateSchedule", 
                        "scheduler:DeleteSchedule"
                    ], 
                    "Resource": [
                        "arn:aws:scheduler:*:*:schedule/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "EventBridgeScheduleActions"
                }, 
                {
                    "Action": [
                        "scheduler:GetScheduleGroup"
                    ], 
                    "Resource": [
                        "arn:aws:scheduler:*:*:schedule-group/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "EventBridgeScheduleGroupActions"
                }, 
                {
                    "Action": [
                        "quicksight:DescribeDataSource", 
                        "quicksight:DescribeFolder", 
                        "quicksight:DescribeFolderPermissions", 
                        "quicksight:ListFolderMembers"
                    ], 
                    "Resource": [
                        "arn:aws:quicksight:*:*:folder/*", 
                        "arn:aws:quicksight:*:*:datasource/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "ManageQuickSightFolderAndDataSourceResources"
                }, 
                {
                    "Action": [
                        "quicksight:DescribeDataSet", 
                        "quicksight:DescribeAccountSubscription", 
                        "quicksight:DescribeUser", 
                        "quicksight:DescribeGroup"
                    ], 
                    "Resource": [
                        "arn:aws:quicksight:*:*:*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "ManageQuickSightOtherResources"
                }, 
                {
                    "Action": [
                        "quicksight:PassDataSource"
                    ], 
                    "Resource": "arn:aws:quicksight:*:*:datasource/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "ManagePassDataSourcePermissions"
                }, 
                {
                    "Action": [
                        "quicksight:CreateDataSet", 
                        "quicksight:TagResource"
                    ], 
                    "Resource": "arn:aws:quicksight:*:*:dataset/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }, 
                        "Null": {
                            "aws:TagKeys": "false"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }, 
                        "StringEqualsIfExists": {
                            "aws:RequestTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}"
                        }
                    }, 
                    "Sid": "ManageCreateDataSetPermissions"
                }, 
                {
                    "Action": [
                        "quicksight:CreateFolderMembership"
                    ], 
                    "Resource": "arn:aws:quicksight:*:*:folder/sagemaker-*-assets", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${aws:PrincipalTag/AmazonDataZoneProject}", 
                            "aws:ResourceTag/AmazonDataZoneAssetsFolder": "true"
                        }
                    }, 
                    "Sid": "CreateFolderMembership"
                }
            ]
        }, 
        "IsDefaultVersion": true
    }
}
