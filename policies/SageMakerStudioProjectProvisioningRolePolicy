{
    "PolicyVersion": {
        "CreateDate": "2025-07-03T18:07:07Z", 
        "VersionId": "v16", 
        "Document": {
            "Version": "2012-10-17", 
            "Statement": [
                {
                    "Action": [
                        "cloudformation:CreateStack", 
                        "cloudformation:TagResource"
                    ], 
                    "Resource": [
                        "arn:aws:cloudformation:*:*:stack/DataZone*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }
                    }, 
                    "Sid": "CfnCreate"
                }, 
                {
                    "Action": [
                        "cloudformation:DescribeStacks", 
                        "cloudformation:DescribeStackEvents", 
                        "cloudformation:UpdateStack"
                    ], 
                    "Resource": [
                        "arn:aws:cloudformation:*:*:stack/DataZone*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "CfnManage"
                }, 
                {
                    "Action": [
                        "cloudformation:DeleteStack", 
                        "cloudformation:DescribeStacks"
                    ], 
                    "Resource": [
                        "arn:aws:cloudformation:*:*:stack/DataZone*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "CfnDelete"
                }, 
                {
                    "Action": "cloudformation:ValidateTemplate", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "ValidateCfn"
                }, 
                {
                    "Action": [
                        "lakeformation:GetDataLakeSettings", 
                        "lakeformation:PutDataLakeSettings", 
                        "lakeformation:RevokePermissions", 
                        "lakeformation:BatchRevokePermissions", 
                        "lakeformation:ListPermissions", 
                        "lakeformation:RegisterResource", 
                        "lakeformation:DeregisterResource", 
                        "lakeformation:GrantPermissions", 
                        "lakeformation:BatchGrantPermissions", 
                        "lakeformation:ListResources", 
                        "lakeformation:DescribeResource"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "LFManage"
                }, 
                {
                    "Action": "s3:GetObject", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }, 
                        "StringNotEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "DzTemplate"
                }, 
                {
                    "Action": "s3:GetObject", 
                    "Resource": "arn:aws:s3:::amazon-sagemaker-cf-templates*/*", 
                    "Effect": "Allow", 
                    "Sid": "DzCfTemplate"
                }, 
                {
                    "Action": [
                        "codecommit:CreateRepository", 
                        "codecommit:TagResource"
                    ], 
                    "Resource": "arn:aws:codecommit:*:*:datazone*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }
                    }, 
                    "Sid": "CcCreate"
                }, 
                {
                    "Action": [
                        "codecommit:DeleteRepository", 
                        "codecommit:UpdateRepositoryEncryptionKey", 
                        "codecommit:PutRepositoryTriggers"
                    ], 
                    "Resource": "arn:aws:codecommit:*:*:datazone*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "CcDelete"
                }, 
                {
                    "Action": [
                        "codecommit:GetBranch", 
                        "codecommit:CreateCommit", 
                        "codecommit:GetRepository", 
                        "codecommit:GetFile"
                    ], 
                    "Resource": "arn:aws:codecommit:*:*:datazone*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "CcAccess"
                }, 
                {
                    "Action": [
                        "codecommit:ListRepositories"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "CcList"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:ReEncryptTo", 
                        "kms:ReEncryptFrom", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "kms:ViaService": [
                                "codecommit.*.amazonaws.com"
                            ]
                        }, 
                        "Null": {
                            "kms:EncryptionContext:aws:codecommit:id": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "CcKms"
                }, 
                {
                    "Action": [
                        "iam:GetRole"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone*", 
                        "arn:aws:iam::*:role/AmazonBedrock*", 
                        "arn:aws:iam::*:role/BedrockStudio*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "GetIamRole"
                }, 
                {
                    "Action": [
                        "iam:CreateRole", 
                        "iam:DetachRolePolicy", 
                        "iam:DeleteRolePolicy", 
                        "iam:AttachRolePolicy", 
                        "iam:PutRolePolicy"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone*", 
                        "arn:aws:iam::*:role/AmazonBedrockExecution*", 
                        "arn:aws:iam::*:role/BedrockStudio*", 
                        "arn:aws:iam::*:role/AmazonBedrockConsumptionRole*", 
                        "arn:aws:iam::*:role/AmazonBedrockEvaluation*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePermissionsBoundary"
                        }
                    }, 
                    "Sid": "IAMManage"
                }, 
                {
                    "Action": [
                        "iam:DeleteRolePolicy", 
                        "iam:PutRolePolicy"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePermissionsBoundary"
                        }
                    }, 
                    "Sid": "IamDzManage"
                }, 
                {
                    "Action": [
                        "iam:CreateRole"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone*", 
                        "arn:aws:iam::*:role/AmazonBedrock*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "RoleCreate"
                }, 
                {
                    "Action": [
                        "iam:DetachRolePolicy", 
                        "iam:AttachRolePolicy"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }, 
                        "ArnEquals": {
                            "iam:PolicyARN": [
                                "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePolicy", 
                                "arn:aws:iam::aws:policy/SageMakerStudioProjectRoleMachineLearningPolicy", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioEMRServiceRolePolicy", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioEMRInstanceRolePolicy", 
                                "arn:aws:iam::aws:policy/service-role/AmazonEMRServicePolicy_v2", 
                                "arn:aws:iam::aws:policy/service-role/AmazonS3TablesLakeFormationServiceRole", 
                                "arn:aws:iam::aws:policy/AmazonSageMakerPartnerAppsFullAccess", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockKnowledgeBaseServiceRolePolicy"
                            ]
                        }
                    }, 
                    "Sid": "IamManage"
                }, 
                {
                    "Action": [
                        "iam:DetachRolePolicy", 
                        "iam:AttachRolePolicy"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneAdminProject": "false"
                        }, 
                        "ArnEquals": {
                            "iam:PolicyARN": [
                                "arn:aws:iam::aws:policy/SageMakerStudioAdminProjectUserRolePolicy"
                            ]
                        }
                    }, 
                    "Sid": "IamManageAdmin"
                }, 
                {
                    "Action": [
                        "iam:AttachRolePolicy", 
                        "iam:DetachRolePolicy"
                    ], 
                    "Resource": "arn:aws:iam::*:role/AmazonBedrock*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }, 
                        "ArnEquals": {
                            "iam:PolicyARN": [
                                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockAgentServiceRolePolicy", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockChatAgentUserRolePolicy", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockFlowServiceRolePolicy", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockFunctionExecutionRolePolicy", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockKnowledgeBaseServiceRolePolicy", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockKnowledgeBaseCustomResourcePolicy", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockPromptUserRolePolicy", 
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioBedrockEvaluationJobServiceRolePolicy"
                            ]
                        }
                    }, 
                    "Sid": "IamManageBR"
                }, 
                {
                    "Action": [
                        "iam:TagRole", 
                        "iam:UntagRole"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_usr_role_*", 
                        "arn:aws:iam::*:role/datazone_s3tables_*", 
                        "arn:aws:iam::*:role/datazone-partner-apps-*", 
                        "arn:aws:iam::*:role/datazone_redshift_serverless_admin_role_*", 
                        "arn:aws:iam::*:role/AmazonBedrock*", 
                        "arn:aws:iam::*:role/BedrockStudio*", 
                        "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "AmazonBedrockManaged", 
                                "RedshiftDb*", 
                                "EnableAmazonBedrockPermissions", 
                                "EnableAmazonBedrockIDEPermissions", 
                                "EnableGlueWorkloadsPermissions", 
                                "EnableSageMakerMLWorkloadsPermissions", 
                                "DomainBucketName", 
                                "KmsKeyId", 
                                "LogGroupName", 
                                "RoleName", 
                                "vpcArn", 
                                "VpcId", 
                                "CreatedForUseWithSageMakerStudio", 
                                "SageMakerStudioQueryExecutionRole"
                            ]
                        }
                    }, 
                    "Sid": "IamTag"
                }, 
                {
                    "Action": [
                        "iam:TagRole", 
                        "iam:UntagRole"
                    ], 
                    "Resource": "arn:aws:iam::*:role/AmazonBedrock*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "AmazonBedrockManaged", 
                                "DomainBucketName", 
                                "KmsKeyId", 
                                "AgentId", 
                                "AgentAliasId", 
                                "AppDefinitionPath", 
                                "DataSourcePath", 
                                "PromptId", 
                                "PromptVersion", 
                                "PromptDefinitionPath", 
                                "OpenSearchServerlessCollectionId"
                            ]
                        }
                    }, 
                    "Sid": "IamTagBR"
                }, 
                {
                    "Action": "iam:TagRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_usr_role_*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "RedshiftDb*"
                            ]
                        }
                    }, 
                    "Sid": "IamTagRS"
                }, 
                {
                    "Action": [
                        "iam:TagRole", 
                        "iam:UntagRole"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_emr_service_role_*", 
                        "arn:aws:iam::*:role/datazone_emr_ec2_instance_role_*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "DataZone*", 
                                "for-use-with-amazon-emr-managed-policies", 
                                "DomainBucketName", 
                                "KmsKeyId", 
                                "VpcId"
                            ]
                        }
                    }, 
                    "Sid": "IamTagEMR"
                }, 
                {
                    "Action": "iam:UntagRole", 
                    "Resource": "arn:aws:iam::*:role/datazone_usr_role_*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": "EnableAmazonBedrockIDEPermissions"
                        }
                    }, 
                    "Sid": "IamUntag"
                }, 
                {
                    "Action": [
                        "iam:DeleteRole", 
                        "iam:ListRolePolicies", 
                        "iam:GetRolePolicy", 
                        "iam:ListAttachedRolePolicies"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone*", 
                        "arn:aws:iam::*:role/AmazonBedrock*", 
                        "arn:aws:iam::*:role/BedrockStudio*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "ManageRoles"
                }, 
                {
                    "Action": [
                        "iam:GetRole", 
                        "iam:UpdateAssumeRolePolicy"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_usr_role_*", 
                        "arn:aws:iam::*:role/datazone_emr_*", 
                        "arn:aws:iam::*:role/datazone-partner-apps-*", 
                        "arn:aws:iam::*:role/AmazonBedrock*", 
                        "arn:aws:iam::*:role/datazone_s3tables_*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }
                    }, 
                    "Sid": "DzManageRoles"
                }, 
                {
                    "Action": [
                        "iam:AttachRolePolicy"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePermissionsBoundary"
                        }
                    }, 
                    "Sid": "IamAttach"
                }, 
                {
                    "Action": [
                        "iam:DetachRolePolicy"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone*", 
                        "arn:aws:iam::*:role/AmazonBedrock*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "IamDetach"
                }, 
                {
                    "Action": [
                        "iam:DeletePolicy", 
                        "iam:CreatePolicy", 
                        "iam:ListPolicies", 
                        "iam:GetPolicy", 
                        "iam:GetPolicyVersion", 
                        "iam:CreatePolicyVersion", 
                        "iam:ListPolicyVersions", 
                        "iam:DeletePolicyVersion"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:policy/datazone*", 
                        "arn:aws:iam::*:policy/connector-manage-access-policy*", 
                        "arn:aws:iam::*:policy/SageMakerStudioQueryExecutionRolePolicy"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "DzManagePolicy"
                }, 
                {
                    "Action": [
                        "iam:ListPolicies"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "ListPolicy"
                }, 
                {
                    "Action": [
                        "glue:ListConnectionTypes", 
                        "glue:DescribeConnectionType"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "GlueConnection"
                }, 
                {
                    "Action": [
                        "iam:GetInstanceProfile", 
                        "iam:CreateInstanceProfile", 
                        "iam:AddRoleToInstanceProfile", 
                        "iam:RemoveRoleFromInstanceProfile", 
                        "iam:DeleteInstanceProfile"
                    ], 
                    "Resource": "arn:aws:iam::*:instance-profile/datazone_emr_ec2_instance_profile_*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "InstanceProfile"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_usr_role_*", 
                        "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": [
                                "cloudformation.amazonaws.com", 
                                "glue.amazonaws.com"
                            ], 
                            "iam:PassedToService": [
                                "glue.amazonaws.com", 
                                "lakeformation.amazonaws.com", 
                                "redshift-serverless.amazonaws.com", 
                                "redshift.amazonaws.com", 
                                "emr-serverless.amazonaws.com", 
                                "airflow.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "PassRole"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_usr_role_*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:PassedToService": [
                                "sagemaker.amazonaws.com", 
                                "redshift-serverless.amazonaws.com", 
                                "bedrock.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "PassRoleForDZ"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_usr_role_*", 
                        "arn:aws:iam::*:role/datazone_s3tables_*", 
                        "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole", 
                        "arn:aws:iam::*:role/service-role/AmazonSageMakerQueryExecution"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:PassedToService": [
                                "glue.amazonaws.com", 
                                "lakeformation.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "PassRoleForGlue"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_emr_service_role_*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "iam:PassedToService": [
                                "elasticmapreduce.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "PassRoleForEmr"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_emr_ec2_instance_role_*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "iam:PassedToService": [
                                "ec2.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "PassRoleForEmrIP"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/AmazonBedrock*", 
                        "arn:aws:iam::*:role/BedrockStudio*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "iam:PassedToService": "bedrock.amazonaws.com"
                        }
                    }, 
                    "Sid": "PassRoleToBR"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/AmazonBedrock*", 
                        "arn:aws:iam::*:role/BedrockStudio*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "iam:PassedToService": "lambda.amazonaws.com"
                        }
                    }, 
                    "Sid": "PassRoleToLambda"
                }, 
                {
                    "Action": "iam:CreateServiceLinkedRole", 
                    "Resource": "arn:aws:iam::*:role/aws-service-role/observability.aoss.amazonaws.com/AWSServiceRoleForAmazonOpenSearchServerless", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "iam:AWSServiceName": "observability.aoss.amazonaws.com"
                        }
                    }, 
                    "Sid": "AossSLR"
                }, 
                {
                    "Action": [
                        "glue:CreateDatabase", 
                        "glue:GetDatabase"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:database/default", 
                        "arn:aws:glue:*:*:catalog", 
                        "arn:aws:glue:*:*:catalog/s3tablescatalog", 
                        "arn:aws:glue:*:*:catalog/s3tablescatalog/*", 
                        "arn:aws:glue:*:*:database/s3tablescatalog/*/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueDb"
                }, 
                {
                    "Action": [
                        "glue:CreateDatabase"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:database/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "CfnGlueDb"
                }, 
                {
                    "Action": [
                        "glue:GetDatabase"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:database/*", 
                        "arn:aws:glue:*:*:catalog"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueDbTag"
                }, 
                {
                    "Action": [
                        "glue:DeleteDatabase"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueDbDelete"
                }, 
                {
                    "Action": [
                        "glue:TagResource"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:RequestTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }
                    }, 
                    "Sid": "GlueTag"
                }, 
                {
                    "Action": "glue:GetConnection", 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog", 
                        "arn:aws:glue:*:*:connection/datazone-glue-network-connection-*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueConnTag"
                }, 
                {
                    "Action": [
                        "glue:CreateConnection", 
                        "glue:DeleteConnection"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:connection/datazone-glue-network-connection-*", 
                        "arn:aws:glue:*:*:catalog"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueConnManage"
                }, 
                {
                    "Action": [
                        "glue:PassConnection", 
                        "glue:GetConnections", 
                        "glue:GetTags"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:connection/*", 
                        "arn:aws:glue:*:*:catalog/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }
                    }, 
                    "Sid": "GlueConnections"
                }, 
                {
                    "Action": [
                        "athena:CreateDataCatalog"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }
                    }, 
                    "Sid": "AthenaConnection"
                }, 
                {
                    "Action": [
                        "glue:GetConnection"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:connection/*", 
                        "arn:aws:glue:*:*:catalog/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "GetConnection"
                }, 
                {
                    "Action": [
                        "athena:TagResource"
                    ], 
                    "Resource": "arn:aws:athena:*:*:datacatalog/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "federated_athena*"
                            ]
                        }
                    }, 
                    "Sid": "ConnectionTag"
                }, 
                {
                    "Action": [
                        "glue:CreateConnection"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog", 
                        "arn:aws:glue:*:*:connection/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:RequestTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "CreateConn"
                }, 
                {
                    "Action": [
                        "glue:DeleteConnection", 
                        "glue:UpdateConnection"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:connection/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ManageConnection"
                }, 
                {
                    "Action": [
                        "glue:DeleteConnection", 
                        "glue:UpdateConnection"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ManageCatalogConn"
                }, 
                {
                    "Action": [
                        "kms:Decrypt"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "kms:ViaService": [
                                "glue.*.amazonaws.com"
                            ]
                        }, 
                        "StringEquals": {
                            "kms:EncryptionContext:glue_catalog_id": "${aws:PrincipalAccount}", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueKms"
                }, 
                {
                    "Action": [
                        "serverlessrepo:GetCloudFormationTemplate", 
                        "serverlessrepo:CreateCloudFormationTemplate"
                    ], 
                    "Resource": [
                        "arn:aws:serverlessrepo:*:*:applications/Athena*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "Repo"
                }, 
                {
                    "Action": [
                        "imagebuilder:GetComponent", 
                        "imagebuilder:GetContainerRecipe", 
                        "ecr:GetAuthorizationToken", 
                        "ecr:BatchGetImage", 
                        "ecr:BatchCheckLayerAvailability", 
                        "ecr:GetDownloadUrlForLayer"
                    ], 
                    "Resource": [
                        "arn:aws:ecr:*:*:repository/athena-federation-repository*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaLast": "lambda.amazonaws.com"
                        }
                    }, 
                    "Sid": "Ecr"
                }, 
                {
                    "Action": [
                        "cloudformation:CreateChangeSet", 
                        "cloudformation:DeleteChangeSet"
                    ], 
                    "Resource": [
                        "arn:aws:cloudformation:*:*:transform/Serverless*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaLast": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "CfnChangeSet"
                }, 
                {
                    "Action": [
                        "lambda:CreateFunction", 
                        "lambda:DeleteFunction"
                    ], 
                    "Resource": [
                        "arn:aws:lambda:*:*:function:athenafederatedcatalog*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaLast": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "LambdaManage"
                }, 
                {
                    "Action": [
                        "lambda:GetFunction"
                    ], 
                    "Resource": [
                        "arn:aws:lambda:*:*:function:athenafederatedcatalog*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaLast": [
                                "athena.amazonaws.com", 
                                "cloudformation.amazonaws.com"
                            ], 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "LambdaGet"
                }, 
                {
                    "Action": [
                        "lambda:GetFunctionConfiguration", 
                        "lambda:UpdateFunctionConfiguration"
                    ], 
                    "Resource": [
                        "arn:aws:lambda:*:*:function:athenafederatedcatalog*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "LambdaUpdate"
                }, 
                {
                    "Action": [
                        "lambda:TagResource"
                    ], 
                    "Resource": [
                        "arn:aws:lambda:*:*:function:athenafederatedcatalog*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaLast": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "aws:cloudformation:*", 
                                "federated_athena*", 
                                "lambda:createdBy"
                            ]
                        }
                    }, 
                    "Sid": "TagLambda"
                }, 
                {
                    "Action": [
                        "s3:GetObject"
                    ], 
                    "Resource": [
                        "arn:aws:s3:::awsserverlessrepo*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "aws:CalledViaLast": [
                                "lambda.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "LambdaS3Get"
                }, 
                {
                    "Action": [
                        "s3:ListBucket"
                    ], 
                    "Resource": [
                        "arn:aws:s3:::*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "s3:prefix": "true"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaLast": [
                                "glue.amazonaws.com"
                            ], 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "S3List"
                }, 
                {
                    "Action": [
                        "cloudformation:CreateStack", 
                        "cloudformation:DeleteStack", 
                        "cloudformation:DescribeStacks", 
                        "cloudformation:DescribeStackEvents"
                    ], 
                    "Resource": "arn:aws:cloudformation:*:*:stack/athenafederatedcatalog*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/federated_athena_datacatalog": "false"
                        }
                    }, 
                    "Sid": "Cfn"
                }, 
                {
                    "Action": [
                        "athena:DeleteDataCatalog", 
                        "athena:GetDataCatalog", 
                        "athena:UpdateDataCatalog"
                    ], 
                    "Resource": "arn:aws:athena:*:*:datacatalog/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AthenaDC"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/datazone_usr_role_*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:PassedToService": [
                                "lambda.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "LambdaPassRole"
                }, 
                {
                    "Action": [
                        "iam:GetRole"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole", 
                        "arn:aws:iam::*:role/service-role/AmazonSageMakerQueryExecution"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "GetRole"
                }, 
                {
                    "Action": [
                        "glue:PassConnection"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:connection/aws:s3tables"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "S3tPassConn"
                }, 
                {
                    "Action": [
                        "lakeformation:GetDataAccess"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "lakeformation:EnabledOnlyForMetaDataAccess": "true", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "LFAccess"
                }, 
                {
                    "Action": [
                        "glue:CreateCatalog"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog", 
                        "arn:aws:glue:*:*:catalog/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:RequestTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueCatalogCreate"
                }, 
                {
                    "Action": [
                        "glue:GetCatalog", 
                        "glue:GetCatalogs", 
                        "glue:UpdateCatalog", 
                        "glue:DeleteCatalog", 
                        "glue:GetDatabase"
                    ], 
                    "Resource": [
                        "arn:aws:glue:*:*:catalog", 
                        "arn:aws:glue:*:*:catalog/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GlueCatalogMgmt"
                }, 
                {
                    "Action": [
                        "redshift-serverless:CreateNamespace", 
                        "redshift-serverless:CreateWorkgroup", 
                        "redshift-serverless:DeleteNamespace", 
                        "redshift-serverless:DeleteWorkgroup", 
                        "redshift-serverless:ListTagsForResource", 
                        "redshift-serverless:GetNamespace", 
                        "redshift-serverless:GetWorkgroup"
                    ], 
                    "Resource": [
                        "arn:aws:redshift-serverless:*:*:namespace/*", 
                        "arn:aws:redshift-serverless:*:*:workgroup/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "RSManage"
                }, 
                {
                    "Action": [
                        "redshift:AssociateDataShareConsumer", 
                        "redshift:AuthorizeDataShare"
                    ], 
                    "Resource": [
                        "arn:aws:redshift:*:*:datashare:*/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAnyValue:StringLike": {
                            "aws:CalledVia": [
                                "redshift-serverless.amazonaws.com", 
                                "glue.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "RedshiftDataShare"
                }, 
                {
                    "Action": [
                        "s3:CreateBucket", 
                        "s3:DeleteBucket", 
                        "s3:PutBucketPolicy", 
                        "s3:PutEncryptionConfiguration", 
                        "s3:PutLifecycleConfiguration", 
                        "s3:PutBucketVersioning", 
                        "s3:PutBucketTagging"
                    ], 
                    "Resource": "arn:aws:s3:::redshift-staging-bucket-*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "RedshiftBucket"
                }, 
                {
                    "Action": [
                        "redshift-serverless:TagResource"
                    ], 
                    "Resource": [
                        "arn:aws:redshift-serverless:*:*:namespace/*", 
                        "arn:aws:redshift-serverless:*:*:workgroup/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:RequestTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }
                    }, 
                    "Sid": "RedshiftTag"
                }, 
                {
                    "Action": [
                        "ec2:CreateSecurityGroup"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:security-group/*", 
                        "arn:aws:ec2:*:*:vpc/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:TagKeys": "true"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "CreateSG"
                }, 
                {
                    "Action": [
                        "ec2:AuthorizeSecurityGroupEgress", 
                        "ec2:AuthorizeSecurityGroupIngress"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:security-group/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "SGAuth"
                }, 
                {
                    "Action": [
                        "ec2:DeleteSecurityGroup", 
                        "ec2:RevokeSecurityGroupEgress", 
                        "ec2:RevokeSecurityGroupIngress"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:security-group/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "SGManage"
                }, 
                {
                    "Action": [
                        "ec2:RevokeSecurityGroupIngress"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:security-group/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }
                    }, 
                    "Sid": "SGRevoke"
                }, 
                {
                    "Action": "ec2:CreateTags", 
                    "Resource": [
                        "arn:aws:ec2:*:*:security-group/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "for-use-with-amazon-emr-managed-policies", 
                                "aws:cloudformation:*"
                            ]
                        }
                    }, 
                    "Sid": "TagEc2"
                }, 
                {
                    "Action": [
                        "ec2:DescribeVpcs", 
                        "ec2:DescribeSecurityGroups", 
                        "ec2:DescribeNatGateways", 
                        "ec2:DescribeRouteTables", 
                        "ec2:DescribeSubnets", 
                        "ec2:DescribeAccountAttributes", 
                        "ec2:DescribeAvailabilityZones"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "EC2Describe"
                }, 
                {
                    "Action": "logs:DescribeLogGroups", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "DescribeLG"
                }, 
                {
                    "Action": [
                        "logs:CreateLogGroup", 
                        "logs:TagResource"
                    ], 
                    "Resource": [
                        "arn:aws:logs:*:*:log-group:datazone-*", 
                        "arn:aws:logs:*:*:log-group:/aws/lambda/amazon-bedrock-ide-*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:RequestTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "AmazonBedrockManaged"
                            ]
                        }
                    }, 
                    "Sid": "CreateLG"
                }, 
                {
                    "Action": "logs:PutRetentionPolicy", 
                    "Resource": [
                        "arn:aws:logs:*:*:log-group:datazone-*", 
                        "arn:aws:logs:*:*:log-group:/aws/lambda/amazon-bedrock-ide-*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "LGRetention"
                }, 
                {
                    "Action": [
                        "logs:DeleteLogGroup", 
                        "logs:DeleteRetentionPolicy", 
                        "logs:GetDataProtectionPolicy", 
                        "logs:PutDataProtectionPolicy", 
                        "logs:DeleteDataProtectionPolicy", 
                        "logs:AssociateKmsKey", 
                        "logs:DisassociateKmsKey", 
                        "logs:ListTagsForResource"
                    ], 
                    "Resource": [
                        "arn:aws:logs:*:*:log-group:datazone-*", 
                        "arn:aws:logs:*:*:log-group:/aws/lambda/amazon-bedrock-ide-*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ManageLG"
                }, 
                {
                    "Action": [
                        "athena:CreateWorkGroup", 
                        "athena:TagResource"
                    ], 
                    "Resource": "arn:aws:athena:*:*:workgroup/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }
                    }, 
                    "Sid": "AthenaManage"
                }, 
                {
                    "Action": [
                        "athena:DeleteWorkGroup", 
                        "athena:GetWorkGroup"
                    ], 
                    "Resource": "arn:aws:athena:*:*:workgroup/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AthenaWGDelete"
                }, 
                {
                    "Action": [
                        "redshift-serverless:CreateNamespace", 
                        "redshift-serverless:CreateWorkgroup", 
                        "redshift-serverless:TagResource"
                    ], 
                    "Resource": [
                        "arn:aws:redshift-serverless:*:*:namespace/*", 
                        "arn:aws:redshift-serverless:*:*:workgroup/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }
                    }, 
                    "Sid": "RedshiftCreate"
                }, 
                {
                    "Action": [
                        "redshift-serverless:ListTagsForResource"
                    ], 
                    "Resource": [
                        "arn:aws:redshift-serverless:*:*:namespace/*", 
                        "arn:aws:redshift-serverless:*:*:workgroup/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "TagRSS"
                }, 
                {
                    "Action": [
                        "secretsmanager:CreateSecret", 
                        "secretsmanager:DeleteSecret", 
                        "secretsmanager:UpdateSecret"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:ResourceTag/CreatedBy": "false"
                        }
                    }, 
                    "Sid": "ManageSecret"
                }, 
                {
                    "Action": [
                        "secretsmanager:DescribeSecret"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }
                    }, 
                    "Sid": "DescribeSecret"
                }, 
                {
                    "Action": [
                        "secretsmanager:DescribeSecret"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
                        }
                    }, 
                    "Sid": "DescribeSecrets"
                }, 
                {
                    "Action": [
                        "secretsmanager:TagResource"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:ResourceTag/CreatedBy": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*", 
                                "CreatedBy"
                            ]
                        }
                    }, 
                    "Sid": "TagSecret"
                }, 
                {
                    "Action": [
                        "kms:GenerateDataKey", 
                        "kms:Decrypt"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "Null": {
                            "kms:EncryptionContext:SecretARN": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": [
                                "secretsmanager.*.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "SecretKms"
                }, 
                {
                    "Action": "iam:CreateServiceLinkedRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/aws-service-role/redshift.amazonaws.com/AWSServiceRoleForRedshift", 
                        "arn:aws:iam::*:role/aws-service-role/sagemaker.amazonaws.com/AWSServiceRoleForAmazonSageMakerNotebooks", 
                        "arn:aws:iam::*:role/aws-service-role/ops.emr-serverless.amazonaws.com/AWSServiceRoleForAmazonEMRServerless", 
                        "arn:aws:iam::*:role/aws-service-role/airflow.amazonaws.com/AWSServiceRoleForAmazonMWAA", 
                        "arn:aws:iam::*:role/aws-service-role/elasticmapreduce.amazonaws.com/AWSServiceRoleForEMRCleanup"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "CreateSLR"
                }, 
                {
                    "Action": [
                        "redshift-serverless:ListNamespaces", 
                        "redshift-serverless:ListWorkgroups", 
                        "redshift:GetResourcePolicy"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "RedshiftList"
                }, 
                {
                    "Action": [
                        "redshift-data:ExecuteStatement", 
                        "redshift:GetResourcePolicy", 
                        "redshift-serverless:GetCredentials"
                    ], 
                    "Resource": [
                        "arn:aws:redshift-serverless:*:*:namespace/*", 
                        "arn:aws:redshift-serverless:*:*:workgroup/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "RssDbRole"
                }, 
                {
                    "Action": [
                        "redshift-data:DescribeStatement", 
                        "redshift-data:GetStatementResult", 
                        "redshift:DescribeDataSharesForConsumer", 
                        "redshift:DescribeDataShares"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "RedshiftData"
                }, 
                {
                    "Action": [
                        "redshift-serverless:UpdateNamespace", 
                        "redshift-serverless:UpdateWorkgroup", 
                        "redshift-serverless:UntagResource"
                    ], 
                    "Resource": [
                        "arn:aws:redshift-serverless:*:*:namespace/*", 
                        "arn:aws:redshift-serverless:*:*:workgroup/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "RedshiftManage"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:Encrypt", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "Null": {
                            "kms:EncryptionContext:aws:redshift-serverless:arn": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": [
                                "redshift-serverless.*.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "RedshiftKms"
                }, 
                {
                    "Action": "secretsmanager:GetRandomPassword", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "GetRandom"
                }, 
                {
                    "Action": [
                        "secretsmanager:DescribeSecret", 
                        "secretsmanager:CreateSecret", 
                        "secretsmanager:UpdateSecret", 
                        "secretsmanager:DeleteSecret", 
                        "secretsmanager:GetResourcePolicy", 
                        "secretsmanager:PutResourcePolicy", 
                        "secretsmanager:DeleteResourcePolicy", 
                        "secretsmanager:TagResource"
                    ], 
                    "Resource": "arn:aws:secretsmanager:*:*:secret:amazon-bedrock-ide/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "BRSecret"
                }, 
                {
                    "Action": [
                        "secretsmanager:CreateSecret", 
                        "secretsmanager:RotateSecret", 
                        "secretsmanager:DescribeSecret", 
                        "secretsmanager:UpdateSecret", 
                        "secretsmanager:DeleteSecret"
                    ], 
                    "Resource": "arn:aws:secretsmanager:*:*:secret:redshift!*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": [
                                "cloudformation.amazonaws.com"
                            ], 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "RedshiftSecret"
                }, 
                {
                    "Action": [
                        "secretsmanager:TagResource"
                    ], 
                    "Resource": "arn:aws:secretsmanager:*:*:secret:redshift!*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "Null": {
                            "aws:TagKeys": "false"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "Redshift", 
                                "aws:secretsmanager:*", 
                                "aws:redshift-serverless:*", 
                                "AmazonDataZone*", 
                                "datazone.rs.workgroup"
                            ]
                        }
                    }, 
                    "Sid": "TagRsSecret"
                }, 
                {
                    "Action": [
                        "sagemaker:CreateDomain", 
                        "sagemaker:AddTags"
                    ], 
                    "Resource": "arn:aws:sagemaker:*:*:domain/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:RequestTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "TagSMD"
                }, 
                {
                    "Action": [
                        "sagemaker:UpdateDomain", 
                        "sagemaker:DeleteDomain"
                    ], 
                    "Resource": "arn:aws:sagemaker:*:*:domain/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ManageSMD"
                }, 
                {
                    "Action": [
                        "sagemaker:ListDomains", 
                        "sagemaker:DescribeDomain"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "SMDManage"
                }, 
                {
                    "Action": "sagemaker:DeleteApp", 
                    "Resource": [
                        "arn:aws:sagemaker:*:*:app/*/*/codeeditor/*", 
                        "arn:aws:sagemaker:*:*:app/*/*/CodeEditor/*", 
                        "arn:aws:sagemaker:*:*:app/*/*/jupyterlab/*", 
                        "arn:aws:sagemaker:*:*:app/*/*/JupyterLab/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "SMAppDelete"
                }, 
                {
                    "Action": "sagemaker:DeleteSpace", 
                    "Resource": "arn:aws:sagemaker:*:*:space/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "DeleteSpace"
                }, 
                {
                    "Action": "sagemaker:DeleteUserProfile", 
                    "Resource": "arn:aws:sagemaker:*:*:user-profile/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "DeleteUserProfile"
                }, 
                {
                    "Action": [
                        "emr-serverless:CreateApplication", 
                        "emr-serverless:TagResource"
                    ], 
                    "Resource": [
                        "*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }
                    }, 
                    "Sid": "EmrSCreate"
                }, 
                {
                    "Action": [
                        "emr-serverless:UpdateApplication", 
                        "emr-serverless:DeleteApplication"
                    ], 
                    "Resource": [
                        "*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "EmrSManage"
                }, 
                {
                    "Action": [
                        "emr-serverless:GetApplication", 
                        "emr-serverless:StopApplication"
                    ], 
                    "Resource": [
                        "*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "EmrSGetStop"
                }, 
                {
                    "Action": "ec2:CreateNetworkInterface", 
                    "Resource": [
                        "arn:aws:ec2:*:*:network-interface/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaLast": "ops.emr-serverless.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "EmrSEc2Eni"
                }, 
                {
                    "Action": "ec2:CreateNetworkInterface", 
                    "Resource": [
                        "arn:aws:ec2:*:*:subnet/*", 
                        "arn:aws:ec2:*:*:security-group/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaLast": "ops.emr-serverless.amazonaws.com"
                        }
                    }, 
                    "Sid": "EmrSEc2Subnet"
                }, 
                {
                    "Action": [
                        "sagemaker:CreateMlflowTrackingServer", 
                        "sagemaker:AddTags"
                    ], 
                    "Resource": "arn:aws:sagemaker:*:*:mlflow-tracking-server/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:RequestTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "MLFlowCreate"
                }, 
                {
                    "Action": "sagemaker:DescribeMlflowTrackingServer", 
                    "Resource": "arn:aws:sagemaker:*:*:mlflow-tracking-server/*", 
                    "Effect": "Allow", 
                    "Sid": "MLFlowDescribe"
                }, 
                {
                    "Action": [
                        "sagemaker:DeleteMlflowTrackingServer"
                    ], 
                    "Resource": "arn:aws:sagemaker:*:*:mlflow-tracking-server/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "MLFlowDelete"
                }, 
                {
                    "Action": [
                        "aoss:GetAccessPolicy", 
                        "aoss:CreateAccessPolicy", 
                        "aoss:DeleteAccessPolicy", 
                        "aoss:UpdateAccessPolicy"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }, 
                        "StringLikeIfExists": {
                            "aoss:collection": "bedrock-ide-*", 
                            "aoss:index": "bedrock-ide-*"
                        }
                    }, 
                    "Sid": "AossManage"
                }, 
                {
                    "Action": [
                        "aoss:GetSecurityPolicy", 
                        "aoss:CreateSecurityPolicy", 
                        "aoss:DeleteSecurityPolicy", 
                        "aoss:UpdateSecurityPolicy"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }, 
                        "StringLikeIfExists": {
                            "aoss:collection": "bedrock-ide-*"
                        }
                    }, 
                    "Sid": "ManageAossPolicies"
                }, 
                {
                    "Action": "aoss:BatchGetCollection", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GetAoss"
                }, 
                {
                    "Action": [
                        "aoss:CreateCollection", 
                        "aoss:UpdateCollection", 
                        "aoss:DeleteCollection", 
                        "aoss:TagResource"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AossCollections"
                }, 
                {
                    "Action": [
                        "s3:GetObject", 
                        "s3:GetObjectVersion"
                    ], 
                    "Resource": "arn:aws:s3:::*/dzd*/*/genAI/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GetBedrockCfnResourceDefinitionS3"
                }, 
                {
                    "Action": [
                        "bedrock:GetAgent", 
                        "bedrock:GetKnowledgeBase", 
                        "bedrock:GetGuardrail", 
                        "bedrock:GetPrompt", 
                        "bedrock:GetFlow", 
                        "bedrock:GetFlowAlias", 
                        "bedrock:ListTagsForResource"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "GetBR"
                }, 
                {
                    "Action": [
                        "bedrock:CreateAgent", 
                        "bedrock:UpdateAgent", 
                        "bedrock:PrepareAgent", 
                        "bedrock:DeleteAgent", 
                        "bedrock:ListAgentAliases", 
                        "bedrock:GetAgentAlias", 
                        "bedrock:CreateAgentAlias", 
                        "bedrock:UpdateAgentAlias", 
                        "bedrock:DeleteAgentAlias", 
                        "bedrock:ListAgentActionGroups", 
                        "bedrock:GetAgentActionGroup", 
                        "bedrock:CreateAgentActionGroup", 
                        "bedrock:UpdateAgentActionGroup", 
                        "bedrock:DeleteAgentActionGroup", 
                        "bedrock:ListAgentKnowledgeBases", 
                        "bedrock:GetAgentKnowledgeBase", 
                        "bedrock:AssociateAgentKnowledgeBase", 
                        "bedrock:DisassociateAgentKnowledgeBase", 
                        "bedrock:UpdateAgentKnowledgeBase", 
                        "bedrock:CreateKnowledgeBase", 
                        "bedrock:UpdateKnowledgeBase", 
                        "bedrock:DeleteKnowledgeBase", 
                        "bedrock:ListDataSources", 
                        "bedrock:GetDataSource", 
                        "bedrock:CreateDataSource", 
                        "bedrock:UpdateDataSource", 
                        "bedrock:DeleteDataSource", 
                        "bedrock:ListIngestionJobs", 
                        "bedrock:GetIngestionJob", 
                        "bedrock:StartIngestionJob", 
                        "bedrock:StopIngestionJob", 
                        "bedrock:CreateGuardrail", 
                        "bedrock:UpdateGuardrail", 
                        "bedrock:DeleteGuardrail", 
                        "bedrock:CreateGuardrailVersion", 
                        "bedrock:CreatePrompt", 
                        "bedrock:UpdatePrompt", 
                        "bedrock:DeletePrompt", 
                        "bedrock:CreatePromptVersion", 
                        "bedrock:CreateFlow", 
                        "bedrock:UpdateFlow", 
                        "bedrock:PrepareFlow", 
                        "bedrock:DeleteFlow", 
                        "bedrock:ListFlowAliases", 
                        "bedrock:GetFlowAlias", 
                        "bedrock:CreateFlowAlias", 
                        "bedrock:UpdateFlowAlias", 
                        "bedrock:DeleteFlowAlias", 
                        "bedrock:ListFlowVersions", 
                        "bedrock:GetFlowVersion", 
                        "bedrock:CreateFlowVersion", 
                        "bedrock:DeleteFlowVersion", 
                        "bedrock:TagResource"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "BRManage"
                }, 
                {
                    "Action": "bedrock:TagResource", 
                    "Resource": [
                        "arn:aws:bedrock:*:*:agent-alias/*/TSTALIASID", 
                        "arn:aws:bedrock:*:*:flow/*/alias/TSTALIASID"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:RequestTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "TagBR"
                }, 
                {
                    "Action": "bedrock:ListEvaluationJobs", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "ListBRJobs"
                }, 
                {
                    "Action": "bedrock:BatchDeleteEvaluationJob", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ManageBRJobs"
                }, 
                {
                    "Action": [
                        "lambda:CreateFunction", 
                        "lambda:InvokeFunction", 
                        "lambda:DeleteFunction", 
                        "lambda:UpdateFunctionCode", 
                        "lambda:GetFunctionConfiguration", 
                        "lambda:UpdateFunctionConfiguration", 
                        "lambda:ListVersionsByFunction", 
                        "lambda:PublishVersion", 
                        "lambda:GetPolicy", 
                        "lambda:AddPermission", 
                        "lambda:TagResource"
                    ], 
                    "Resource": "arn:aws:lambda:*:*:function:amazon-bedrock-ide-*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "BRLambda"
                }, 
                {
                    "Action": [
                        "lambda:GetFunction", 
                        "lambda:ListTags", 
                        "lambda:RemovePermission"
                    ], 
                    "Resource": "arn:aws:lambda:*:*:function:amazon-bedrock-ide-*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ManageBRLambda"
                }, 
                {
                    "Action": [
                        "elasticmapreduce:CreateSecurityConfiguration", 
                        "elasticmapreduce:DeleteSecurityConfiguration"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "EMRManage"
                }, 
                {
                    "Action": [
                        "elasticmapreduce:AddJobFlowSteps", 
                        "elasticmapreduce:AddTags", 
                        "elasticmapreduce:DescribeJobFlows", 
                        "elasticmapreduce:ListInstanceFleets", 
                        "elasticmapreduce:ModifyInstanceFleet", 
                        "elasticmapreduce:RunJobFlow", 
                        "elasticmapreduce:SetTerminationProtection", 
                        "elasticmapreduce:TerminateJobFlows", 
                        "elasticmapreduce:DescribeCluster"
                    ], 
                    "Resource": "arn:aws:elasticmapreduce:*:*:cluster/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com"
                        }
                    }, 
                    "Sid": "EMRClusterManage"
                }, 
                {
                    "Action": [
                        "airflow:CreateEnvironment", 
                        "airflow:UpdateEnvironment", 
                        "airflow:DeleteEnvironment", 
                        "airflow:TagResource"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }
                    }, 
                    "Sid": "AirflowEnv"
                }, 
                {
                    "Action": [
                        "airflow:GetEnvironment"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "AirflowGet"
                }, 
                {
                    "Action": [
                        "s3:GetEncryptionConfiguration"
                    ], 
                    "Resource": [
                        "arn:aws:s3:::*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "AirflowS3"
                }, 
                {
                    "Action": [
                        "ec2:CreateVpcEndpoint"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:vpc-endpoint/*", 
                        "arn:aws:ec2:*:*:vpc/*", 
                        "arn:aws:ec2:*:*:subnet/*", 
                        "arn:aws:ec2:*:*:security-group/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "VpcCreate"
                }, 
                {
                    "Action": [
                        "ec2:CreateNetworkInterface"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:subnet/*", 
                        "arn:aws:ec2:*:*:network-interface/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "ENICreate"
                }, 
                {
                    "Action": [
                        "kms:CreateGrant"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "Null": {
                            "kms:EncryptionContextKeys": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": [
                                "airflow.*.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "AirflowKmsCreateGrant"
                }, 
                {
                    "Action": [
                        "kms:DescribeKey"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "KmsDescribe"
                }, 
                {
                    "Action": [
                        "iam:GetRole", 
                        "iam:CreateRole", 
                        "iam:DetachRolePolicy", 
                        "iam:DeleteRolePolicy", 
                        "iam:AttachRolePolicy"
                    ], 
                    "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:PermissionsBoundary": "arn:aws:iam::aws:policy/SageMakerStudioProjectUserRolePermissionsBoundary"
                        }
                    }, 
                    "Sid": "QueryRoleManage"
                }, 
                {
                    "Action": [
                        "iam:CreateRole"
                    ], 
                    "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole", 
                    "Effect": "Allow", 
                    "Sid": "QueryRoleCreate"
                }, 
                {
                    "Action": [
                        "iam:DetachRolePolicy", 
                        "iam:AttachRolePolicy"
                    ], 
                    "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ArnEquals": {
                            "iam:PolicyARN": [
                                "arn:aws:iam::aws:policy/service-role/SageMakerStudioQueryExecutionRolePolicy"
                            ]
                        }
                    }, 
                    "Sid": "QueryRolePolicy"
                }, 
                {
                    "Action": "iam:TagRole", 
                    "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "CreatedForUseWithSageMakerStudio", 
                                "SageMakerStudioQueryExecutionRole"
                            ]
                        }
                    }, 
                    "Sid": "TagQueryRole"
                }, 
                {
                    "Action": [
                        "iam:ListAttachedRolePolicies"
                    ], 
                    "Resource": "arn:aws:iam::*:role/SageMakerStudioQueryExecutionRole", 
                    "Effect": "Allow", 
                    "Sid": "ListQueryPolicy"
                }, 
                {
                    "Action": "ec2:DeleteSecurityGroup", 
                    "Resource": "arn:aws:ec2:*:*:security-group/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }
                    }, 
                    "Sid": "EMRCleanup"
                }, 
                {
                    "Action": [
                        "iam:ListAttachedRolePolicies", 
                        "iam:ListRolePolicies", 
                        "iam:ListInstanceProfilesForRole", 
                        "iam:DeleteRolePolicy", 
                        "iam:DeleteRole"
                    ], 
                    "Resource": "arn:aws:iam::*:role/datazone_emr_*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }
                    }, 
                    "Sid": "EmrRoleCleanup"
                }, 
                {
                    "Action": [
                        "iam:RemoveRoleFromInstanceProfile", 
                        "iam:DeleteInstanceProfile"
                    ], 
                    "Resource": "arn:aws:iam::*:instance-profile/datazone_emr_ec2_instance_profile_*", 
                    "Effect": "Allow", 
                    "Sid": "EmrInstanceCleanup"
                }, 
                {
                    "Action": [
                        "scheduler:ListTagsForResource", 
                        "scheduler:GetScheduleGroup"
                    ], 
                    "Resource": "arn:aws:scheduler:*:*:schedule-group/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "Scheduler"
                }, 
                {
                    "Action": "scheduler:DeleteScheduleGroup", 
                    "Resource": "arn:aws:scheduler:*:*:schedule-group/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ScheduleGroup"
                }, 
                {
                    "Action": "scheduler:CreateScheduleGroup", 
                    "Resource": "arn:aws:scheduler:*:*:schedule-group/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:RequestTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": "AmazonDataZone*"
                        }
                    }, 
                    "Sid": "CreateSchedule"
                }, 
                {
                    "Action": "scheduler:TagResource", 
                    "Resource": "arn:aws:scheduler:*:*:schedule-group/*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false", 
                            "aws:TagKeys": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }, 
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": "AmazonDataZone*"
                        }
                    }, 
                    "Sid": "TagSchedule"
                }, 
                {
                    "Action": [
                        "scheduler:DeleteSchedule"
                    ], 
                    "Resource": [
                        "arn:aws:scheduler:*:*:schedule/SageMakerUnifiedStudio-*-*/*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:CalledViaFirst": "cloudformation.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "DeleteSchedule"
                }, 
                {
                    "Action": [
                        "quicksight:CreateDataSource", 
                        "quicksight:CreateFolder", 
                        "quicksight:CreateFolderMembership", 
                        "quicksight:CreateVPCConnection", 
                        "quicksight:DeleteDataSource", 
                        "quicksight:DeleteFolder", 
                        "quicksight:DescribeDataSource", 
                        "quicksight:DescribeFolderPermissions", 
                        "quicksight:DescribeDataSourcePermissions", 
                        "quicksight:DeleteVPCConnection", 
                        "quicksight:ListFolderMembers", 
                        "quicksight:ListTagsForResource", 
                        "quicksight:UpdateDataSource", 
                        "quicksight:UpdateDataSourcePermissions", 
                        "quicksight:UpdateFolder", 
                        "quicksight:UpdateFolderPermissions", 
                        "quicksight:UpdateVPCConnection"
                    ], 
                    "Resource": [
                        "*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ManageQSFolder"
                }, 
                {
                    "Action": [
                        "quicksight:DescribeAccountSubscription", 
                        "quicksight:DescribeDataSet", 
                        "quicksight:DescribeDashboard", 
                        "quicksight:DescribeDashboardPermissions", 
                        "quicksight:DescribeFolder", 
                        "quicksight:DescribeGroup", 
                        "quicksight:DescribeGroupMembership", 
                        "quicksight:DescribeUser", 
                        "quicksight:DescribeVPCConnection", 
                        "quicksight:ListTagsForResource", 
                        "quicksight:UpdateDashboardPermissions"
                    ], 
                    "Resource": [
                        "arn:aws:quicksight:*:*:*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "QuickSightResources"
                }, 
                {
                    "Action": [
                        "quicksight:TagResource"
                    ], 
                    "Resource": [
                        "arn:aws:quicksight:*:*:*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "TagQS"
                }, 
                {
                    "Action": [
                        "iam:PassRole"
                    ], 
                    "Resource": [
                        "arn:aws:iam::*:role/service-role/AmazonSageMakerQuickSightVPC", 
                        "arn:aws:iam::*:role/datazone_usr_role_*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:PassedToService": "quicksight.amazonaws.com"
                        }
                    }, 
                    "Sid": "PassRoleForQS"
                }, 
                {
                    "Action": "events:PutRule", 
                    "Resource": "arn:aws:events:*:*:rule/Managed.SageMaker*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "events:source": "false", 
                            "events:detail-type": "false"
                        }, 
                        "StringEquals": {
                            "events:ManagedBy": "datazone.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}", 
                            "events:detail-type": [
                                "AWS Service Event via CloudTrail", 
                                "CodeCommit Repository State Change"
                            ]
                        }, 
                        "ForAllValues:StringEquals": {
                            "events:source": [
                                "aws.quicksight", 
                                "aws.codecommit"
                            ]
                        }
                    }, 
                    "Sid": "PutRule"
                }, 
                {
                    "Action": [
                        "events:DeleteRule", 
                        "events:DisableRule", 
                        "events:EnableRule", 
                        "events:PutTargets", 
                        "events:RemoveTargets"
                    ], 
                    "Resource": "arn:aws:events:*:*:rule/Managed.SageMaker*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "events:ManagedBy": "datazone.amazonaws.com", 
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "ManageEventRules"
                }, 
                {
                    "Action": [
                        "secretsmanager:GetSecretValue"
                    ], 
                    "Resource": "arn:aws:secretsmanager:*:*:secret:*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "aws:ResourceTag/AmazonDataZoneProject": "false"
                        }, 
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "RssAdmin"
                }, 
                {
                    "Action": [
                        "s3:GetAccessGrantsInstance", 
                        "s3:CreateAccessGrantsInstance"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceAccount": "${aws:PrincipalAccount}"
                        }
                    }, 
                    "Sid": "S3AGPerm"
                }
            ]
        }, 
        "IsDefaultVersion": false
    }
}
