{
    "PolicyVersion": {
        "CreateDate": "2025-10-30T19:34:08Z", 
        "VersionId": "v3", 
        "Document": {
            "Version": "2012-10-17", 
            "Statement": [
                {
                    "Action": [
                        "cloudwatch:*", 
                        "glue:*", 
                        "logs:*", 
                        "redshift-data:*", 
                        "redshift-serverless:*", 
                        "redshift:*", 
                        "s3:*"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "DataAccess"
                }, 
                {
                    "Action": [
                        "athena:*", 
                        "bedrock:*", 
                        "codewhisperer:*", 
                        "q:*", 
                        "sagemaker:*", 
                        "sagemaker-mlflow:*", 
                        "scheduler:*", 
                        "sqlworkbench:*", 
                        "emr-serverless:*"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "ComputeAccess"
                }, 
                {
                    "Action": [
                        "datazone:AcceptPredictions", 
                        "datazone:AcceptSubscriptionRequest", 
                        "datazone:CancelMetadataGenerationRun", 
                        "datazone:CancelSubscription", 
                        "datazone:CreateAsset*", 
                        "datazone:CreateConnection", 
                        "datazone:CreateListingChangeSet", 
                        "datazone:CreateProject", 
                        "datazone:CreateSubscriptionGrant", 
                        "datazone:CreateSubscriptionRequest", 
                        "datazone:DeleteAsset*", 
                        "datazone:DeleteConnection", 
                        "datazone:DeleteListing", 
                        "datazone:DeleteProject", 
                        "datazone:DeleteSubscriptionGrant", 
                        "datazone:DeleteSubscriptionRequest", 
                        "datazone:Get*", 
                        "datazone:List*", 
                        "datazone:PostLineageEvent", 
                        "datazone:RejectPredictions", 
                        "datazone:RejectSubscriptionRequest", 
                        "datazone:RevokeSubscription", 
                        "datazone:Search", 
                        "datazone:SearchListings", 
                        "datazone:SearchRules", 
                        "datazone:SearchTypes", 
                        "datazone:SearchUserProfiles", 
                        "datazone:StartMetadataGenerationRun", 
                        "datazone:UpdateAssetFilter", 
                        "datazone:UpdateConnection", 
                        "datazone:UpdateProject", 
                        "datazone:UpdateSubscriptionRequest"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "DataZone"
                }, 
                {
                    "Action": [
                        "iam:GetRole", 
                        "iam:ListRoles", 
                        "sts:AssumeRole"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "IamSts"
                }, 
                {
                    "Action": "iam:CreateServiceLinkedRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/aws-service-role/neptune-graph.amazonaws.com/AWSServiceRoleForNeptuneGraph", 
                        "arn:aws:iam::*:role/aws-service-role/redshift.amazonaws.com/AWSServiceRoleForRedshift", 
                        "arn:aws:iam::*:role/aws-service-role/sagemaker.amazonaws.com/AWSServiceRoleForAmazonSageMakerNotebooks", 
                        "arn:aws:iam::*:role/aws-service-role/ops.emr-serverless.amazonaws.com/AWSServiceRoleForAmazonEMRServerless", 
                        "arn:aws:iam::*:role/aws-service-role/airflow.amazonaws.com/AWSServiceRoleForAmazonMWAA", 
                        "arn:aws:iam::*:role/aws-service-role/elasticmapreduce.amazonaws.com/AWSServiceRoleForEMRCleanup", 
                        "arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint", 
                        "arn:aws:iam::*:role/aws-service-role/observability.aoss.amazonaws.com/AWSServiceRoleForAmazonOpenSearchServerless"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "CreateSLR"
                }, 
                {
                    "Action": "sts:TagSession", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAllValues:StringLike": {
                            "aws:TagKeys": [
                                "AmazonDataZone*"
                            ]
                        }
                    }, 
                    "Sid": "TagSession"
                }, 
                {
                    "Action": "iam:PassRole", 
                    "Resource": [
                        "arn:aws:iam::*:role/service-role/AmazonSageMaker*"
                    ], 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "iam:PassedToService": [
                                "sagemaker.amazonaws.com", 
                                "lakeformation.amazonaws.com", 
                                "glue.amazonaws.com", 
                                "bedrock.amazonaws.com", 
                                "redshift-serverless.amazonaws.com", 
                                "redshift.amazonaws.com", 
                                "scheduler.amazonaws.com"
                            ]
                        }
                    }, 
                    "Sid": "PassRole"
                }, 
                {
                    "Action": "sts:SetSourceIdentity", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "sts:SourceIdentity": "${aws:PrincipalTag/datazone:userId}"
                        }
                    }, 
                    "Sid": "SourceIdentity"
                }, 
                {
                    "Action": [
                        "ssm:GetParameter*"
                    ], 
                    "Resource": [
                        "arn:aws:ssm:*:*:parameter/amazon/datazone/q*", 
                        "arn:aws:ssm:*:*:parameter/amazon/datazone/genAI/*", 
                        "arn:aws:ssm:*::parameter/aws/service/sagemaker-distribution/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "SSM"
                }, 
                {
                    "Action": [
                        "lakeformation:BatchGrantPermissions", 
                        "lakeformation:BatchRevokePermissions", 
                        "lakeformation:DescribeResource", 
                        "lakeformation:GetDataAccess", 
                        "lakeformation:GrantPermissions", 
                        "lakeformation:ListResources", 
                        "lakeformation:ListPermissions", 
                        "lakeformation:RevokePermissions"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "LFAccess"
                }, 
                {
                    "Action": [
                        "dynamodb:List*", 
                        "dynamodb:Describe*", 
                        "dynamodb:Scan", 
                        "dynamodb:PartiQLSelect", 
                        "dynamodb:Query", 
                        "secretsmanager:ListSecrets", 
                        "resource-groups:GetGroupQuery", 
                        "resource-groups:ListGroupResources"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "FederatedConn"
                }, 
                {
                    "Action": [
                        "secretsmanager:CreateSecret", 
                        "secretsmanager:DeleteSecret", 
                        "secretsmanager:DescribeSecret", 
                        "secretsmanager:GetSecretValue", 
                        "secretsmanager:UpdateSecret", 
                        "secretsmanager:PutResourcePolicy"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/AmazonDataZoneProject": "${datazone:projectId}"
                        }
                    }, 
                    "Sid": "PrivateSecret"
                }, 
                {
                    "Action": [
                        "secretsmanager:CreateSecret", 
                        "secretsmanager:DescribeSecret", 
                        "secretsmanager:GetSecretValue", 
                        "secretsmanager:UpdateSecret"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringEquals": {
                            "aws:ResourceTag/for-use-with-all-datazone-projects": "true"
                        }
                    }, 
                    "Sid": "SharedSecret"
                }, 
                {
                    "Action": [
                        "ecr:BatchCheckLayerAvailability", 
                        "ecr:BatchGetImage", 
                        "ecr:DescribeImages", 
                        "ecr:GetAuthorizationToken", 
                        "ecr:GetDownloadUrlForLayer"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "Ecr"
                }, 
                {
                    "Action": [
                        "codeconnections:UseConnection", 
                        "codeconnections:ListConnections", 
                        "codeconnections:GetConnection", 
                        "codeconnections:GetHost", 
                        "codeconnections:ListTagsForResource", 
                        "codestar-connections:UseConnection", 
                        "codestar-connections:ListConnections", 
                        "codestar-connections:GetConnection", 
                        "codestar-connections:GetHost", 
                        "codestar-connections:ListTagsForResource"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "CodeConnectionsUser"
                }, 
                {
                    "Action": [
                        "kms:DescribeKey", 
                        "kms:ListAliases", 
                        "kms:ListGrants"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "KmsListAndDescribe"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "ForAnyValue:StringEquals": {
                            "kms:EncryptionContextKeys": "aws:datazone:domainId"
                        }, 
                        "StringLike": {
                            "kms:ViaService": "datazone.*.amazonaws.com"
                        }
                    }, 
                    "Sid": "DataZoneKms"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "kms:EncryptionContext:aws:s3:arn": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": "s3.*.amazonaws.com"
                        }
                    }, 
                    "Sid": "S3Kms"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "kms:EncryptionContext:aws:scheduler:schedule:arn": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": "scheduler.*.amazonaws.com"
                        }
                    }, 
                    "Sid": "SchedulerKms"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:Encrypt", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "kms:EncryptionContext:SecretARN": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": "secretsmanager.*.amazonaws.com"
                        }
                    }, 
                    "Sid": "SecretsKms"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:Encrypt", 
                        "kms:GenerateDataKey", 
                        "kms:GenerateDataKeyWithoutPlaintext"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "kms:EncryptionContextKeys": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": "sagemaker.*.amazonaws.com"
                        }
                    }, 
                    "Sid": "SageMakerKms"
                }, 
                {
                    "Action": [
                        "kms:CreateGrant"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "StringLike": {
                            "kms:ViaService": "sagemaker.*.amazonaws.com"
                        }
                    }, 
                    "Sid": "SageMakerCreateGrant"
                }, 
                {
                    "Action": [
                        "kms:Decrypt", 
                        "kms:Encrypt", 
                        "kms:GenerateDataKey", 
                        "kms:GenerateDataKeyWithoutPlaintext"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "kms:EncryptionContextKeys": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": "glue.*.amazonaws.com"
                        }
                    }, 
                    "Sid": "GlueKms"
                }, 
                {
                    "Action": [
                        "kms:CreateGrant", 
                        "kms:Decrypt", 
                        "kms:GenerateDataKey"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Condition": {
                        "Null": {
                            "kms:EncryptionContextKeys": "false"
                        }, 
                        "StringLike": {
                            "kms:ViaService": "bedrock.*.amazonaws.com"
                        }
                    }, 
                    "Sid": "BedrockKms"
                }, 
                {
                    "Action": "ec2:Describe*", 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "Ec2DescribeOnly"
                }, 
                {
                    "Action": [
                        "ec2:CreateNetworkInterface", 
                        "ec2:DeleteNetworkInterface"
                    ], 
                    "Resource": "*", 
                    "Effect": "Allow", 
                    "Sid": "VpcAccess"
                }, 
                {
                    "Action": [
                        "ec2:CreateTags", 
                        "ec2:DeleteTags"
                    ], 
                    "Resource": [
                        "arn:aws:ec2:*:*:network-interface/*"
                    ], 
                    "Effect": "Allow", 
                    "Sid": "EC2TagAccessForVpc"
                }
            ]
        }, 
        "IsDefaultVersion": true
    }
}
